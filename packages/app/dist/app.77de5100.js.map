{"version":3,"sources":["node_modules/tslib/tslib.es6.js","node_modules/graphql/jsutils/nodejsCustomInspectSymbol.js","node_modules/graphql/jsutils/inspect.js","node_modules/graphql/language/visitor.js","node_modules/ts-invariant/lib/invariant.esm.js","node_modules/fast-json-stable-stringify/index.js","node_modules/process/browser.js","../src/storeUtils.ts","../src/directives.ts","../src/fragments.ts","../src/util/assign.ts","../src/getFromAST.ts","../src/util/filterInPlace.ts","../src/transform.ts","../src/util/cloneDeep.ts","../src/util/environment.ts","../src/util/errorHandling.ts","../src/util/isEqual.ts","../src/util/maybeDeepFreeze.ts","../src/util/mergeDeep.ts","../src/util/warnOnce.ts","../src/util/stripSymbols.ts","node_modules/zen-observable/lib/Observable.js","node_modules/zen-observable/index.js","../src/zenObservable.ts","node_modules/apollo-link/node_modules/ts-invariant/lib/invariant.esm.js","node_modules/graphql/language/printer.js","../src/linkUtils.ts","../src/link.ts","node_modules/symbol-observable/es/ponyfill.js","node_modules/symbol-observable/es/index.js","../src/dedupLink.ts","../src/core/networkStatus.ts","../src/util/Observable.ts","../src/errors/ApolloError.ts","../src/core/types.ts","../src/core/ObservableQuery.ts","../src/data/mutations.ts","../src/data/queries.ts","../src/util/capitalizeFirstLetter.ts","../src/core/LocalState.ts","../src/core/QueryManager.ts","../src/data/store.ts","../src/version.ts","../src/ApolloClient.ts","../src/utils.ts","../src/cache.ts","../src/types/Cache.ts","node_modules/optimism/lib/cache.js","node_modules/immutable-tuple/dist/tuple.mjs","node_modules/optimism/lib/local.js","node_modules/optimism/lib/entry.js","node_modules/optimism/lib/index.js","../src/fixPolyfills.ts","../src/fragmentMatcher.ts","../src/cacheKeys.ts","../src/depTrackingCache.ts","../src/readFromStore.ts","../src/objectCache.ts","../src/writeToStore.ts","../src/inMemoryCache.ts","node_modules/apollo-link-http-common/node_modules/ts-invariant/lib/invariant.esm.js","../src/index.ts","../src/httpLink.ts","node_modules/graphql/jsutils/defineToJSON.js","node_modules/graphql/jsutils/invariant.js","node_modules/graphql/jsutils/defineToStringTag.js","node_modules/graphql/language/source.js","node_modules/graphql/language/location.js","node_modules/graphql/error/printError.js","node_modules/graphql/error/GraphQLError.js","node_modules/graphql/error/syntaxError.js","node_modules/graphql/error/locatedError.js","node_modules/graphql/error/formatError.js","node_modules/graphql/error/index.js","node_modules/graphql/language/blockStringValue.js","node_modules/graphql/language/lexer.js","node_modules/graphql/language/kinds.js","node_modules/graphql/language/directiveLocation.js","node_modules/graphql/language/parser.js","node_modules/graphql-tag/src/index.js","../src/graphql-client.ts","node_modules/page/page.js","../src/layout-router.ts","../src/client-controller.ts","index.ts","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__exportStar","m","exports","__values","o","__read","ar","error","__spread","concat","__await","__asyncGenerator","asyncIterator","q","a","resume","settle","fulfill","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","k","default","__importDefault","nodejsCustomInspectSymbol","for","undefined","_default","inspect","_nodejsCustomInspectSymbol","_interopRequireDefault","require","obj","_typeof","JSON","stringify","name","customInspectFn","getCustomFn","customValue","isArray","map","join","properties","keys","String","object","visit","visitInParallel","visitWithTypeInfo","getVisitFn","BREAK","QueryDocumentKeys","_inspect","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","root","visitor","visitorKeys","stack","inArray","index","edits","node","parent","path","ancestors","newRoot","isLeaving","isEdited","slice","clone","_arr","_i","editOffset","ii","editKey","editValue","splice","prev","isNode","Error","visitFn","kind","maybeNode","Boolean","visitors","skipping","enter","fn","leave","typeInfo","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","genericMessage","_a","proto","InvariantError","_super","message","_this","framesToPop","invariant","condition","warn","args","console","invariant$1","process","module","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","Item","array","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","print","_visitor","ast","printDocASTReducer","definitions","operation","varDefs","wrap","variableDefinitions","directives","selectionSet","_ref","variable","type","defaultValue","_ref2","selections","block","_ref3","alias","_ref4","_ref5","_ref6","typeCondition","_ref7","_ref8","_ref9","_ref10","isBlockString","printBlockString","_ref11","_ref12","_ref13","values","_ref14","fields","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","operationTypes","_ref21","addDescription","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","indent","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","separator","filter","x","start","maybeString","end","replace","isMultiline","string","some","isDescription","escaped","tslib_1.__extends","symbolObservablePonyfill","observable","self","window","global","Function","LinkObservable","tslib_1.__assign","Deduplicator","useSymbol","brand","globalKey","def","enumerable","writable","configurable","freeze","isObjRef","forEachArrayMethod","mustConvertThisToArray","UniversalWeakMap","_weakMap","_strongMap","data","get","_getMap","set","canCreate","WeakMap","Map","lookup","lookupArray","item","tuple","arguments$1","argc","isTuple","that","toArray","method","ref","defaultNormalizedCacheFactory","hasOwn","defineToJSON","classObject","toString","toJSON","defineToStringTag","toStringTag","Source","_invariant","_defineToStringTag","locationOffset","line","column","getLocation","source","position","lineRegexp","match","exec","printError","_location","printedLocations","nodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","loc","highlightSourceAtLocation","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","location","firstLineColumnOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","lines","split","printPrefixedLines","existingLines","padLen","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","prefix","Math","max","lpad","str","GraphQLError","_printError","positions","originalError","extensions","_nodes","_source","_positions","reduce","list","_locations","pos","_extensions","defineProperties","captureStackTrace","syntaxError","_GraphQLError","locatedError","formatError","_syntaxError","_locatedError","_formatError","blockStringValue","rawString","commonIndent","leadingWhitespace","isBlank","createLexer","getTokenDesc","TokenKind","_defineToJSON","_error","_blockStringValue","options","startOfFileToken","Tok","SOF","lexer","lastToken","token","lineStart","advance","advanceLexer","lookahead","EOF","readToken","COMMENT","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","charCodeAt","printCharCode","code","isNaN","fromCharCode","toUpperCase","bodyLength","positionAfterWhitespace","col","readComment","readName","readNumber","readBlockString","readString","unexpectedCharacterMessage","startPosition","firstCode","isFloat","readDigits","chunkStart","charCode","uniCharCode","rawValue","char2hex","Kind","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","parse","parseValue","parseType","parseConstValue","parseTypeReference","parseNamedType","_lexer","_kinds","_directiveLocation","sourceObj","parseDocument","expect","parseValueLiteral","parseName","many","parseDefinition","peek","parseExecutableDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","parseOperationDefinition","parseFragmentDefinition","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","parseVariableDefinition","parseVariable","skip","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","skipKeyword","parseFragmentName","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","parseValueValue","any","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseDirectiveLocations","parseDirectiveLocation","startToken","noLocation","Loc","endToken","atToken","openKind","parseFn","closeKind","ApolloClient","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","overlay","createErrorOverlay","document","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","deps","cached","cache"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AlB5HA,IAAM,kBAAkB,GAAG,CACzB,SADyB,EAEzB,KAFyB,EAGzB,aAHyB,EAIzB,SAJyB,EAKzB,OALyB,EAMzB,cANyB,EAOzB,aAPyB,EAQzB,SARyB,EASzB,gBATyB,EAUzB,OAVyB,EAWzB,MAXyB,EAYzB,SAZyB,EAazB,WAbyB,EAczB,UAdyB,EAezB,iBAfyB,CAA3B;;AAkBA,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmDjE,wBAAAA,aAAAA,EAAAA,MAAAA;;AACjD,WAAA,aAAA,CAAY,MAAZ,EAAqC;AAAzB,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,EAAA;AAAyB;;AAArC,QAA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","file":"app.77de5100.js","sourceRoot":"..","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Copyright (c) 2018-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nvar _default = nodejsCustomInspectSymbol;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspect;\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Used to print values in error messages.\n */\nfunction inspect(value) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value) {\n        var customInspectFn = getCustomFn(value);\n\n        if (customInspectFn) {\n          // $FlowFixMe(>=0.90.0)\n          var customValue = customInspectFn.call(value);\n          return typeof customValue === 'string' ? customValue : inspect(customValue);\n        } else if (Array.isArray(value)) {\n          return '[' + value.map(inspect).join(', ') + ']';\n        }\n\n        var properties = Object.keys(value).map(function (k) {\n          return \"\".concat(k, \": \").concat(inspect(value[k]));\n        }).join(', ');\n        return properties ? '{ ' + properties + ' }' : '{}';\n      }\n\n      return String(value);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(_nodejsCustomInspectSymbol.default)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.visitWithTypeInfo = visitWithTypeInfo;\nexports.getVisitFn = getVisitFn;\nexports.BREAK = exports.QueryDocumentKeys = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nvar BREAK = {};\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          var _arr = Object.keys(node);\n\n          for (var _i = 0; _i < _arr.length; _i++) {\n            var k = _arr[_i];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + (0, _inspect.default)(node));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      false);\n\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind,\n      /* isLeaving */\n      true);\n      var result;\n\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\n(function (invariant) {\r\n    function warn() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.warn.apply(console, args);\r\n    }\r\n    invariant.warn = warn;\r\n    function error() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.error.apply(console, args);\r\n    }\r\n    invariant.error = error;\r\n})(invariant || (invariant = {}));\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant };\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject &&\n    (idObject as IdValue | JsonValue).type === 'id' &&\n    typeof (idObject as IdValue).generated === 'boolean';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new InvariantError(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  FieldNode,\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n} from 'graphql';\n\nimport { visit } from 'graphql/language/visitor';\n\nimport { invariant } from 'ts-invariant';\n\nimport { argumentsObjectFromField } from './storeUtils';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function getDirectiveInfoFromField(\n  field: FieldNode,\n  variables: Object,\n): DirectiveInfo {\n  if (field.directives && field.directives.length) {\n    const directiveObj: DirectiveInfo = {};\n    field.directives.forEach((directive: DirectiveNode) => {\n      directiveObj[directive.name.value] = argumentsObjectFromField(\n        directive,\n        variables,\n      );\n    });\n    return directiveObj;\n  }\n  return null;\n}\n\nexport function shouldInclude(\n  selection: SelectionNode,\n  variables: { [name: string]: any } = {},\n): boolean {\n  if (!selection.directives) {\n    return true;\n  }\n\n  let res: boolean = true;\n  selection.directives.forEach(directive => {\n    // TODO should move this validation to GraphQL validation once that's implemented.\n    if (directive.name.value !== 'skip' && directive.name.value !== 'include') {\n      // Just don't worry about directives we don't understand\n      return;\n    }\n\n    //evaluate the \"if\" argument and skip (i.e. return undefined) if it evaluates to true.\n    const directiveArguments = directive.arguments || [];\n    const directiveName = directive.name.value;\n\n    invariant(\n      directiveArguments.length === 1,\n      `Incorrect number of arguments for the @${directiveName} directive.`,\n    );\n\n    const ifArgument = directiveArguments[0];\n    invariant(\n      ifArgument.name && ifArgument.name.value === 'if',\n      `Invalid argument for the @${directiveName} directive.`,\n    );\n\n    const ifValue = directiveArguments[0].value;\n    let evaledValue: boolean = false;\n    if (!ifValue || ifValue.kind !== 'BooleanValue') {\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue.kind === 'Variable',\n        `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n      );\n      evaledValue = variables[(ifValue as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directiveName} directive.`,\n      );\n    } else {\n      evaledValue = (ifValue as BooleanValueNode).value;\n    }\n\n    if (directiveName === 'skip') {\n      evaledValue = !evaledValue;\n    }\n\n    if (!evaledValue) {\n      res = false;\n    }\n  });\n\n  return res;\n}\n\nexport function getDirectiveNames(doc: DocumentNode) {\n  const names: string[] = [];\n\n  visit(doc, {\n    Directive(node) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], doc: DocumentNode) {\n  return getDirectiveNames(doc).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more then one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n","/**\n * Adds the properties of one or more source objects to a target object. Works exactly like\n * `Object.assign`, but as a utility to maintain support for IE 11.\n *\n * @see https://github.com/apollostack/apollo-client/pull/1009\n */\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n): A & B & C & D & E;\nexport function assign(target: any, ...sources: Array<any>): any;\nexport function assign(\n  target: { [key: string]: any },\n  ...sources: Array<{ [key: string]: any }>\n): { [key: string]: any } {\n  sources.forEach(source => {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(key => {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  invariant(mutationDef, 'Must contain a mutation definition.');\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  invariant(def, `GraphQL document is missing an operation`);\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n} from 'graphql';\nimport { visit } from 'graphql/language/visitor';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from './util/filterInPlace';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll fist check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // docuemnt.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            selection.kind === 'Field' &&\n            ((selection as FieldNode).name.value === '__typename' ||\n              (selection as FieldNode).name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        console.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  return (\n    selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (selection.kind !== 'Field' || !(selection as FieldNode)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  checkDocument(doc);\n\n  let parentPath: string;\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      SelectionSet: {\n        enter(node, _key, _parent, path) {\n          const currentPath = path.join('-');\n\n          if (\n            !parentPath ||\n            currentPath === parentPath ||\n            !currentPath.startsWith(parentPath)\n          ) {\n            if (node.selections) {\n              const selectionsWithDirectives = node.selections.filter(\n                selection => hasDirectivesInSelection(directives, selection),\n              );\n\n              if (hasDirectivesInSelectionSet(directives, node, false)) {\n                parentPath = currentPath;\n              }\n\n              return {\n                ...node,\n                selections: selectionsWithDirectives,\n              };\n            } else {\n              return null;\n            }\n          }\n        },\n      },\n    }),\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ),\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            node.arguments.forEach(arg => {\n              if (argMatcher(arg)) {\n                argMatchCount += 1;\n              }\n            });\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection => {\n                return (\n                  selection.kind === 'Field' &&\n                  (selection as FieldNode).name.value === '__typename'\n                );\n              },\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper<T>(val: T, seen: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","/**\n * Performs a deep equality check on two JavaScript values.\n */\nexport function isEqual(a: any, b: any): boolean {\n  // If the two values are strictly equal, we are good.\n  if (a === b) {\n    return true;\n  }\n  // Dates are equivalent if their time values are equal.\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  // If a and b are both objects, we will compare their properties. This will compare arrays as\n  // well.\n  if (\n    a != null &&\n    typeof a === 'object' &&\n    b != null &&\n    typeof b === 'object'\n  ) {\n    // Compare all of the keys in `a`. If one of the keys has a different value, or that key does\n    // not exist in `b` return false immediately.\n    for (const key in a) {\n      if (Object.prototype.hasOwnProperty.call(a, key)) {\n        if (!Object.prototype.hasOwnProperty.call(b, key)) {\n          return false;\n        }\n        if (!isEqual(a[key], b[key])) {\n          return false;\n        }\n      }\n    }\n    // Look through all the keys in `b`. If `b` has a key that `a` does not, return false.\n    for (const key in b) {\n      if (\n        Object.prototype.hasOwnProperty.call(b, key) &&\n        !Object.prototype.hasOwnProperty.call(a, key)\n      ) {\n        return false;\n      }\n    }\n    // If we made it this far the objects are equal!\n    return true;\n  }\n  // Otherwise the values are not equal.\n  return false;\n}\n","import { isDevelopment, isTest } from './environment';\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o: any) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n\nexport function maybeDeepFreeze(obj: any) {\n  if (isDevelopment() || isTest()) {\n    // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n    // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n    const symbolIsPolyfilled =\n      typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\n","const { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || {} as T;\n  const count = sources.length;\n  if (count > 1) {\n    const pastCopies: any[] = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (let i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\n\nfunction isObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(\n  target: any,\n  source: any,\n  pastCopies: any[],\n) {\n  if (isObject(source) && isObject(target)) {\n    // In case the target has been frozen, make an extensible copy so that\n    // we can merge properties into the copy.\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(sourceKey => {\n      const sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        const targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          // When there is a key collision, we need to make a shallow copy of\n          // target[sourceKey] so the merge does not modify any source objects.\n          // To avoid making unnecessary copies, we use a simple array to track\n          // past copies, since it's safe to modify copies created earlier in\n          // the merge. We use an array for pastCopies instead of a Map or Set,\n          // since the number of copies should be relatively small, and some\n          // Map/Set polyfills modify their keys.\n          target[sourceKey] = mergeHelper(\n            shallowCopyForMerge(targetValue, pastCopies),\n            sourceValue,\n            pastCopies,\n          );\n        }\n      } else {\n        // If there is no collision, the target can safely share memory with\n        // the source, and the recursion can terminate here.\n        target[sourceKey] = sourceValue;\n      }\n    });\n\n    return target;\n  }\n\n  // If source (or target) is not an object, let source replace target.\n  return source;\n}\n\nfunction shallowCopyForMerge<T>(value: T, pastCopies: any[]): T {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    pastCopies.indexOf(value) < 0\n  ) {\n    if (Array.isArray(value)) {\n      value = (value as any).slice(0);\n    } else {\n      value = {\n        __proto__: Object.getPrototypeOf(value),\n        ...value,\n      };\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (isProduction()) {\n    return;\n  }\n  if (!haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    switch (type) {\n      case 'error':\n        console.error(msg);\n        break;\n      default:\n        console.warn(msg);\n    }\n  }\n}\n","/**\n * In order to make assertions easier, this function strips `symbol`'s from\n * the incoming data.\n *\n * This can be handy when running tests against `apollo-client` for example,\n * since it adds `symbol`'s to the data in the store. Jest's `toEqual`\n * function now covers `symbol`'s (https://github.com/facebook/jest/pull/3437),\n * which means all test data used in a `toEqual` comparison would also have to\n * include `symbol`'s, to pass. By stripping `symbol`'s from the cache data\n * we can compare against more simplified test data.\n */\nexport function stripSymbols<T>(data: T): T {\n  return JSON.parse(JSON.stringify(data));\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species');\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, SymbolObservable);\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","module.exports = require('./lib/Observable.js').Observable;\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\n(function (invariant) {\r\n    function warn() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.warn.apply(console, args);\r\n    }\r\n    invariant.warn = warn;\r\n    function error() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.error.apply(console, args);\r\n    }\r\n    invariant.error = error;\r\n})(invariant || (invariant = {}));\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require(\"./visitor\");\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n}\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\n\n\nfunction printBlockString(value, isDescription) {\n  var escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  return isMultiline(value) || value[0] !== ' ' && value[0] !== '\\t' ? \"\\\"\\\"\\\"\\n\".concat(isDescription ? escaped : indent(escaped), \"\\n\\\"\\\"\\\"\") : \"\\\"\\\"\\\"\".concat(escaped.replace(/\"$/, '\"\\n'), \"\\\"\\\"\\\"\");\n}","import Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX we're assuming here that variables will be serialized in the same order.\n  // that might not always be true\n  return `${print(operation.query)}|${JSON.stringify(operation.variables)}|${\n    operation.operationName\n  }`;\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import {\n  ApolloLink,\n  Operation,\n  NextLink,\n  FetchResult,\n  Observable,\n} from 'apollo-link';\n\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nexport class DedupLink extends ApolloLink {\n  private inFlightRequestObservables: Map<\n    string,\n    Observable<FetchResult>\n  > = new Map();\n  private subscribers: Map<string, any> = new Map();\n\n  public request(\n    operation: Operation,\n    forward: NextLink,\n  ): Observable<FetchResult> {\n    // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n    if (operation.getContext().forceFetch) {\n      return forward(operation);\n    }\n\n    const key = operation.toKey();\n\n    if (!this.inFlightRequestObservables.get(key)) {\n      // this is a new request, i.e. we haven't deduplicated it yet\n      // call the next link\n      const singleObserver = forward(operation);\n      let subscription;\n\n      const sharedObserver = new Observable(observer => {\n        // this will still be called by each subscriber regardless of\n        // deduplication status\n        if (!this.subscribers.has(key)) this.subscribers.set(key, new Set());\n\n        this.subscribers.get(key).add(observer);\n\n        if (!subscription) {\n          subscription = singleObserver.subscribe({\n            next: result => {\n              const subscribers = this.subscribers.get(key);\n              this.subscribers.delete(key);\n              this.inFlightRequestObservables.delete(key);\n              if (subscribers) {\n                subscribers.forEach(obs => obs.next(result));\n                subscribers.forEach(obs => obs.complete());\n              }\n            },\n            error: error => {\n              const subscribers = this.subscribers.get(key);\n              this.subscribers.delete(key);\n              this.inFlightRequestObservables.delete(key);\n              if (subscribers) {\n                subscribers.forEach(obs => obs.error(error));\n              }\n            },\n          });\n        }\n\n        return () => {\n          if (this.subscribers.has(key)) {\n            this.subscribers.get(key).delete(observer);\n            if (this.subscribers.get(key).size === 0) {\n              this.inFlightRequestObservables.delete(key);\n              if (subscription) subscription.unsubscribe();\n            }\n          }\n        };\n      });\n\n      this.inFlightRequestObservables.set(key, sharedObserver);\n    }\n\n    // return shared Observable\n    return this.inFlightRequestObservables.get(key);\n  }\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus: NetworkStatus,\n): boolean {\n  return networkStatus < 7;\n}\n","// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\n\nexport type Subscription = ZenObservable.Subscription;\nexport type Observer<T> = ZenObservable.Observer<T>;\n\nimport $$observable from 'symbol-observable';\n\n// rxjs interopt\nexport class Observable<T> extends LinkObservable<T> {\n  public [$$observable]() {\n    return this;\n  }\n\n  public ['@@observable' as any]() {\n    return this;\n  }\n}\n","import { GraphQLError } from 'graphql';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n    err.graphQLErrors.forEach((graphQLError: GraphQLError) => {\n      const errorMessage = graphQLError\n        ? graphQLError.message\n        : 'Error message not found.';\n      message += `GraphQL error: ${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public networkError: Error | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    networkError?: Error | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      this.message = generateErrorMessage(this);\n    } else {\n      this.message = errorMessage;\n    }\n\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","import { FetchResult } from 'apollo-link';\nimport { DocumentNode, GraphQLError } from 'graphql';\n\nimport { QueryStoreValue } from '../data/queries';\nimport { NetworkStatus } from './networkStatus';\n\nexport type QueryListener = (\n  queryStoreValue: QueryStoreValue,\n  newData?: any,\n  forceResolvers?: boolean,\n) => void;\n\nexport type OperationVariables = { [key: string]: any };\n\nexport type PureQueryOptions = {\n  query: DocumentNode;\n  variables?: { [key: string]: any };\n  context?: any;\n};\n\nexport type ApolloQueryResult<T> = {\n  data: T;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  stale: boolean;\n};\n\nexport enum FetchType {\n  normal = 1,\n  refetch = 2,\n  poll = 3,\n}\n\n// This is part of the public API, people write these functions in `updateQueries`.\nexport type MutationQueryReducer<T> = (\n  previousResult: Record<string, any>,\n  options: {\n    mutationResult: FetchResult<T>;\n    queryName: string | undefined;\n    queryVariables: Record<string, any>;\n  },\n) => Record<string, any>;\n\nexport type MutationQueryReducersMap<T = { [key: string]: any }> = {\n  [queryName: string]: MutationQueryReducer<T>;\n};\n\nexport interface Resolvers {\n  [key: string]: {\n    [field: string]: (\n      rootValue?: any,\n      args?: any,\n      context?: any,\n      info?: any,\n    ) => any;\n  };\n}\n","import { isEqual, tryFunctionOrLogError, cloneDeep } from 'apollo-utilities';\nimport { GraphQLError } from 'graphql';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable, Observer, Subscription } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, FetchType, OperationVariables } from './types';\nimport {\n  ModifiableWatchQueryOptions,\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ErrorPolicy,\n  UpdateQueryFn,\n} from './watchQueryOptions';\n\nimport { QueryStoreValue } from '../data/queries';\n\nimport { invariant } from 'ts-invariant';\n\n// XXX remove in the next breaking semver change (3.0)\n// Deprecated, use ApolloCurrentQueryResult\nexport type ApolloCurrentResult<T> = {\n  data: T | {};\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n};\n\nexport type ApolloCurrentQueryResult<T> = {\n  data: T | undefined;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n  stale?: boolean;\n};\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nexport const hasError = (\n  storeValue: QueryStoreValue,\n  policy: ErrorPolicy = 'none',\n) =>\n  storeValue &&\n  ((storeValue.graphQLErrors &&\n    storeValue.graphQLErrors.length > 0 &&\n    policy === 'none') ||\n    storeValue.networkError);\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public options: WatchQueryOptions<TVariables>;\n  public queryId: string;\n  /**\n   *\n   * The current value of the variables for this query. Can change.\n   */\n  public variables: TVariables;\n\n  private shouldSubscribe: boolean;\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers: Observer<ApolloQueryResult<TData>>[];\n  private subscriptionHandles: Subscription[];\n\n  private lastResult: ApolloQueryResult<TData>;\n  private lastResultSnapshot: ApolloQueryResult<TData>;\n  private lastError: ApolloError;\n\n  constructor({\n    queryManager,\n    options,\n    shouldSubscribe = true,\n  }: {\n    queryManager: QueryManager<any>;\n    options: WatchQueryOptions<TVariables>;\n    shouldSubscribe?: boolean;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) =>\n      this.onSubscribe(observer),\n    );\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.variables = options.variables || ({} as TVariables);\n    this.queryId = queryManager.generateQueryId();\n    this.shouldSubscribe = shouldSubscribe;\n\n    // related classes\n    this.queryManager = queryManager;\n\n    // interal data stores\n    this.observers = [];\n    this.subscriptionHandles = [];\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    const that = this;\n    return new Promise((resolve, reject) => {\n      let subscription: Subscription;\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next(result: ApolloQueryResult<TData>) {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          if (!that.observers.some(obs => obs !== observer)) {\n            that.queryManager.removeQuery(that.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error(error: any) {\n          reject(error);\n        },\n      };\n      subscription = that.subscribe(observer);\n    });\n  }\n\n  // XXX remove in the next breaking semver change (3.0)\n  // Deprecated, use getCurrentResult()\n  public currentResult(): ApolloCurrentResult<TData> {\n    const result = this.getCurrentResult() as ApolloCurrentResult<TData>;\n    if (result.data === undefined) {\n      result.data = {};\n    }\n    return result;\n  }\n\n  /**\n   * Return the result of the query from the local cache as well as some fetching status\n   * `loading` and `networkStatus` allow to know if a request is in flight\n   * `partial` lets you know if the result from the local cache is complete or partial\n   * @return {data: Object, error: ApolloError, loading: boolean, networkStatus: number, partial: boolean}\n   */\n  public getCurrentResult(): ApolloCurrentQueryResult<TData> {\n    if (this.isTornDown) {\n      return {\n        data: this.lastError\n          ? undefined\n          : this.lastResult\n          ? this.lastResult.data\n          : undefined,\n        error: this.lastError,\n        loading: false,\n        networkStatus: NetworkStatus.error,\n      };\n    }\n\n    const queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n\n    if (hasError(queryStoreValue, this.options.errorPolicy)) {\n      return {\n        data: undefined,\n        loading: false,\n        networkStatus: queryStoreValue.networkStatus,\n        error: new ApolloError({\n          graphQLErrors: queryStoreValue.graphQLErrors,\n          networkError: queryStoreValue.networkError,\n        }),\n      };\n    }\n\n    // Variables might have been added dynamically at query time, when\n    // using `@client @export(as: \"varname\")` for example. When this happens,\n    // the variables have been updated in the query store, but not updated on\n    // the original `ObservableQuery`. We'll update the observable query\n    // variables here to match, so retrieving from the cache doesn't fail.\n    if (queryStoreValue && queryStoreValue.variables) {\n      this.options.variables = Object.assign(\n        {},\n        this.options.variables,\n        queryStoreValue.variables,\n      );\n    }\n\n    const { data, partial } = this.queryManager.getCurrentQueryResult(this);\n\n    const queryLoading =\n      !queryStoreValue ||\n      queryStoreValue.networkStatus === NetworkStatus.loading;\n\n    // We need to be careful about the loading state we show to the user, to try\n    // and be vaguely in line with what the user would have seen from .subscribe()\n    // but to still provide useful information synchronously when the query\n    // will not end up hitting the server.\n    // See more: https://github.com/apollostack/apollo-client/issues/707\n    // Basically: is there a query in flight right now (modolo the next tick)?\n    const loading =\n      (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n      (partial && this.options.fetchPolicy !== 'cache-only');\n\n    // if there is nothing in the query store, it means this query hasn't fired yet or it has been cleaned up. Therefore the\n    // network status is dependent on queryLoading.\n    let networkStatus: NetworkStatus;\n    if (queryStoreValue) {\n      networkStatus = queryStoreValue.networkStatus;\n    } else {\n      networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n    }\n\n    const result = {\n      data,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    if (\n      queryStoreValue &&\n      queryStoreValue.graphQLErrors &&\n      this.options.errorPolicy === 'all'\n    ) {\n      result.errors = queryStoreValue.graphQLErrors;\n    }\n\n    if (!partial) {\n      this.lastResult = { ...result, stale: false };\n      this.lastResultSnapshot = cloneDeep(this.lastResult);\n    }\n\n    return { ...result, partial };\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    const { lastResultSnapshot: snapshot } = this;\n    return !(\n      snapshot &&\n      newResult &&\n      snapshot.networkStatus === newResult.networkStatus &&\n      snapshot.stale === newResult.stale &&\n      isEqual(snapshot.data, newResult.data)\n    );\n  }\n\n  // Returns the last result that observer.next was called with. This is not the same as\n  // getCurrentResult! If you're not sure which you need, then you probably need getCurrentResult.\n  public getLastResult(): ApolloQueryResult<TData> {\n    return this.lastResult;\n  }\n\n  public getLastError(): ApolloError {\n    return this.lastError;\n  }\n\n  public resetLastResults(): void {\n    delete this.lastResult;\n    delete this.lastResultSnapshot;\n    delete this.lastError;\n    this.isTornDown = false;\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: TVariables): Promise<ApolloQueryResult<TData>> {\n    const { fetchPolicy } = this.options;\n    // early return if trying to read from cache during refetch\n    if (fetchPolicy === 'cache-only') {\n      return Promise.reject(\n        new Error(\n          'cache-only fetchPolicy option should not be used together with query refetch.',\n        ),\n      );\n    }\n\n    if (!isEqual(this.variables, variables)) {\n      // update observable variables\n      this.variables = Object.assign({}, this.variables, variables);\n    }\n\n    if (!isEqual(this.options.variables, this.variables)) {\n      // Update the existing options with new variables\n      this.options.variables = Object.assign(\n        {},\n        this.options.variables,\n        this.variables,\n      );\n    }\n\n    // Override fetchPolicy for this call only\n    // only network-only and no-cache are safe to use\n    const isNetworkFetchPolicy =\n      fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n\n    const combinedOptions: WatchQueryOptions = {\n      ...this.options,\n      fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only',\n    };\n\n    return this.queryManager\n      .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n      .then(result => result as ApolloQueryResult<TData>);\n  }\n\n  public fetchMore<K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    // early return if no update Query\n    invariant(fetchMoreOptions.updateQuery,\n      'updateQuery option is required. This function defines how to update the query data with the new results.',\n    );\n\n    let combinedOptions: any;\n\n    return Promise.resolve()\n      .then(() => {\n        const qid = this.queryManager.generateQueryId();\n\n        if (fetchMoreOptions.query) {\n          // fetch a new query\n          combinedOptions = fetchMoreOptions;\n        } else {\n          // fetch the same query with a possibly new variables\n          combinedOptions = {\n            ...this.options,\n            ...fetchMoreOptions,\n            variables: Object.assign(\n              {},\n              this.variables,\n              fetchMoreOptions.variables,\n            ),\n          };\n        }\n\n        combinedOptions.fetchPolicy = 'network-only';\n\n        return this.queryManager.fetchQuery(\n          qid,\n          combinedOptions as WatchQueryOptions,\n          FetchType.normal,\n          this.queryId,\n        );\n      })\n      .then(fetchMoreResult => {\n        this.updateQuery((previousResult: any) =>\n          fetchMoreOptions.updateQuery(previousResult, {\n            fetchMoreResult: fetchMoreResult.data as TData,\n            variables: combinedOptions.variables,\n          }),\n        );\n\n        return fetchMoreResult as ApolloQueryResult<TData>;\n      });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<TSubscriptionData = TData>(\n    options: SubscribeToMoreOptions<TData, TVariables, TSubscriptionData>,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          if (options.updateQuery) {\n            this.updateQuery((previous, { variables }) =>\n              (options.updateQuery as UpdateQueryFn<\n                TData,\n                TVariables,\n                TSubscriptionData\n              >)(previous, {\n                subscriptionData,\n                variables,\n              }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          console.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptionHandles.push(subscription);\n\n    return () => {\n      const i = this.subscriptionHandles.indexOf(subscription);\n      if (i >= 0) {\n        this.subscriptionHandles.splice(i, 1);\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  // Note: if the query is not active (there are no subscribers), the promise\n  // will return null immediately.\n  public setOptions(\n    opts: ModifiableWatchQueryOptions,\n  ): Promise<ApolloQueryResult<TData>> {\n    const oldOptions = this.options;\n    this.options = Object.assign({}, this.options, opts) as WatchQueryOptions<\n      TVariables\n    >;\n\n    if (opts.pollInterval) {\n      this.startPolling(opts.pollInterval);\n    } else if (opts.pollInterval === 0) {\n      this.stopPolling();\n    }\n\n    // If fetchPolicy went from cache-only to something else, or from something else to network-only\n    const tryFetch: boolean =\n      (oldOptions.fetchPolicy !== 'network-only' &&\n        opts.fetchPolicy === 'network-only') ||\n      (oldOptions.fetchPolicy === 'cache-only' &&\n        opts.fetchPolicy !== 'cache-only') ||\n      (oldOptions.fetchPolicy === 'standby' &&\n        opts.fetchPolicy !== 'standby') ||\n      false;\n\n    return this.setVariables(\n      this.options.variables as TVariables,\n      tryFetch,\n      opts.fetchResults,\n    );\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   *\n   * @param tryFetch: Try and fetch new results even if the variables haven't\n   * changed (we may still just hit the store, but if there's nothing in there\n   * this will refetch)\n   *\n   * @param fetchResults: Option to ignore fetching results when updating variables\n   */\n  public setVariables(\n    variables: TVariables,\n    tryFetch: boolean = false,\n    fetchResults = true,\n  ): Promise<ApolloQueryResult<TData>> {\n    // since setVariables restarts the subscription, we reset the tornDown status\n    this.isTornDown = false;\n\n    const newVariables = variables ? variables : this.variables;\n\n    if (isEqual(newVariables, this.variables) && !tryFetch) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      if (this.observers.length === 0 || !fetchResults) {\n        return new Promise(resolve => resolve());\n      }\n      return this.result();\n    } else {\n      this.variables = newVariables;\n      this.options.variables = newVariables;\n\n      // See comment above\n      if (this.observers.length === 0) {\n        return new Promise(resolve => resolve());\n      }\n\n      // Use the same options as before, but with new variables\n      return this.queryManager\n        .fetchQuery(this.queryId, {\n          ...this.options,\n          variables: this.variables,\n        } as WatchQueryOptions)\n        .then(result => result as ApolloQueryResult<TData>);\n    }\n  }\n\n  public updateQuery(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVariables>,\n    ) => TData,\n  ): void {\n    const {\n      previousResult,\n      variables,\n      document,\n    } = this.queryManager.getQueryWithPreviousResult(this.queryId);\n\n    const newResult = tryFunctionOrLogError(() =>\n      mapFn(previousResult, { variables: variables as TVariables }),\n    );\n\n    if (newResult) {\n      this.queryManager.dataStore.markUpdateQueryResult(\n        document,\n        variables,\n        newResult,\n      );\n      this.queryManager.broadcastQueries();\n    }\n  }\n\n  public stopPolling() {\n    this.queryManager.stopPollingQuery(this.queryId);\n    this.options.pollInterval = undefined;\n  }\n\n  public startPolling(pollInterval: number) {\n    assertNotCacheFirstOrOnly(this);\n    this.options.pollInterval = pollInterval;\n    this.queryManager.startPollingQuery(this.options, this.queryId);\n  }\n\n  private onSubscribe(observer: Observer<ApolloQueryResult<TData>>) {\n    // Zen Observable has its own error function, in order to log correctly\n    // we need to declare a custom error if nothing is passed\n    if (\n      (observer as any)._subscription &&\n      (observer as any)._subscription._observer &&\n      !(observer as any)._subscription._observer.error\n    ) {\n      (observer as any)._subscription._observer.error = (\n        error: ApolloError,\n      ) => {\n        console.error('Unhandled error', error.message, error.stack);\n      };\n    }\n\n    this.observers.push(observer);\n\n    // Deliver initial result\n    if (observer.next && this.lastResult) observer.next(this.lastResult);\n    if (observer.error && this.lastError) observer.error(this.lastError);\n\n    // setup the query if it hasn't been done before\n    if (this.observers.length === 1) this.setUpQuery();\n\n    return () => {\n      this.observers = this.observers.filter(obs => obs !== observer);\n\n      if (this.observers.length === 0) {\n        this.tearDownQuery();\n      }\n    };\n  }\n\n  private setUpQuery() {\n    if (this.shouldSubscribe) {\n      this.queryManager.addObservableQuery<TData>(this.queryId, this);\n    }\n\n    if (!!this.options.pollInterval) {\n      assertNotCacheFirstOrOnly(this);\n      this.queryManager.startPollingQuery(this.options, this.queryId);\n    }\n\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: (result: ApolloQueryResult<TData>) => {\n        this.lastResult = result;\n        this.lastResultSnapshot = cloneDeep(result);\n        this.observers.forEach(obs => obs.next && obs.next(result));\n      },\n      error: (error: ApolloError) => {\n        this.lastError = error;\n        this.observers.forEach(obs => obs.error && obs.error(error));\n      },\n    };\n\n    this.queryManager.startQuery<TData>(\n      this.queryId,\n      this.options,\n      this.queryManager.queryListenerForObserver(\n        this.queryId,\n        this.options,\n        observer,\n      ),\n    );\n  }\n\n  private tearDownQuery() {\n    this.isTornDown = true;\n    this.queryManager.stopPollingQuery(this.queryId);\n\n    // stop all active GraphQL subscriptions\n    this.subscriptionHandles.forEach(sub => sub.unsubscribe());\n    this.subscriptionHandles = [];\n\n    this.queryManager.removeObservableQuery(this.queryId);\n\n    this.queryManager.stopQuery(this.queryId);\n\n    this.observers = [];\n  }\n}\n\nfunction assertNotCacheFirstOrOnly<TData, TVariables>(\n  obsQuery: ObservableQuery<TData, TVariables>,\n) {\n  const { fetchPolicy } = obsQuery.options;\n  invariant(\n    fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only',\n    'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.',\n  );\n}\n","import { DocumentNode } from 'graphql';\n\nexport class MutationStore {\n  private store: { [mutationId: string]: MutationStoreValue } = {};\n\n  public getStore(): { [mutationId: string]: MutationStoreValue } {\n    return this.store;\n  }\n\n  public get(mutationId: string): MutationStoreValue {\n    return this.store[mutationId];\n  }\n\n  public initMutation(\n    mutationId: string,\n    mutation: DocumentNode,\n    variables: Object | undefined,\n  ) {\n    this.store[mutationId] = {\n      mutation,\n      variables: variables || {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  public markMutationError(mutationId: string, error: Error) {\n    const mutation = this.store[mutationId];\n\n    if (!mutation) {\n      return;\n    }\n\n    mutation.loading = false;\n    mutation.error = error;\n  }\n\n  public markMutationResult(mutationId: string) {\n    const mutation = this.store[mutationId];\n\n    if (!mutation) {\n      return;\n    }\n\n    mutation.loading = false;\n    mutation.error = null;\n  }\n\n  public reset() {\n    this.store = {};\n  }\n}\n\nexport interface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Object;\n  loading: boolean;\n  error: Error | null;\n}\n","import { DocumentNode, GraphQLError, ExecutionResult } from 'graphql';\nimport { isEqual } from 'apollo-utilities';\nimport { InvariantError } from 'ts-invariant';\nimport { NetworkStatus } from '../core/networkStatus';\n\nexport type QueryStoreValue = {\n  document: DocumentNode;\n  variables: Object;\n  previousVariables?: Object | null;\n  networkStatus: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  metadata: any;\n};\n\nexport class QueryStore {\n  private store: { [queryId: string]: QueryStoreValue } = {};\n\n  public getStore(): { [queryId: string]: QueryStoreValue } {\n    return this.store;\n  }\n\n  public get(queryId: string): QueryStoreValue {\n    return this.store[queryId];\n  }\n\n  public initQuery(query: {\n    queryId: string;\n    document: DocumentNode;\n    storePreviousVariables: boolean;\n    variables: Object;\n    isPoll: boolean;\n    isRefetch: boolean;\n    metadata: any;\n    fetchMoreForQueryId: string | undefined;\n  }) {\n    const previousQuery = this.store[query.queryId];\n\n    if (\n      previousQuery &&\n      previousQuery.document !== query.document &&\n      !isEqual(previousQuery.document, query.document)\n    ) {\n      // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n      // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n      // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n      throw new InvariantError(\n        'Internal Error: may not update existing query string in store',\n      );\n    }\n\n    let isSetVariables = false;\n\n    let previousVariables: Object | null = null;\n    if (\n      query.storePreviousVariables &&\n      previousQuery &&\n      previousQuery.networkStatus !== NetworkStatus.loading\n      // if the previous query was still loading, we don't want to remember it at all.\n    ) {\n      if (!isEqual(previousQuery.variables, query.variables)) {\n        isSetVariables = true;\n        previousVariables = previousQuery.variables;\n      }\n    }\n\n    // TODO break this out into a separate function\n    let networkStatus;\n    if (isSetVariables) {\n      networkStatus = NetworkStatus.setVariables;\n    } else if (query.isPoll) {\n      networkStatus = NetworkStatus.poll;\n    } else if (query.isRefetch) {\n      networkStatus = NetworkStatus.refetch;\n      // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n    } else {\n      networkStatus = NetworkStatus.loading;\n    }\n\n    let graphQLErrors: ReadonlyArray<GraphQLError> = [];\n    if (previousQuery && previousQuery.graphQLErrors) {\n      graphQLErrors = previousQuery.graphQLErrors;\n    }\n\n    // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n    // the store. We probably want a refetch action instead, because I suspect that if you refetch\n    // before the initial fetch is done, you'll get an error.\n    this.store[query.queryId] = {\n      document: query.document,\n      variables: query.variables,\n      previousVariables,\n      networkError: null,\n      graphQLErrors: graphQLErrors,\n      networkStatus,\n      metadata: query.metadata,\n    };\n\n    // If the action had a `moreForQueryId` property then we need to set the\n    // network status on that query as well to `fetchMore`.\n    //\n    // We have a complement to this if statement in the query result and query\n    // error action branch, but importantly *not* in the client result branch.\n    // This is because the implementation of `fetchMore` *always* sets\n    // `fetchPolicy` to `network-only` so we would never have a client result.\n    if (\n      typeof query.fetchMoreForQueryId === 'string' &&\n      this.store[query.fetchMoreForQueryId]\n    ) {\n      this.store[query.fetchMoreForQueryId].networkStatus =\n        NetworkStatus.fetchMore;\n    }\n  }\n\n  public markQueryResult(\n    queryId: string,\n    result: ExecutionResult,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = null;\n    this.store[queryId].graphQLErrors =\n      result.errors && result.errors.length ? result.errors : [];\n    this.store[queryId].previousVariables = null;\n    this.store[queryId].networkStatus = NetworkStatus.ready;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (\n      typeof fetchMoreForQueryId === 'string' &&\n      this.store[fetchMoreForQueryId]\n    ) {\n      this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n    }\n  }\n\n  public markQueryError(\n    queryId: string,\n    error: Error,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = error;\n    this.store[queryId].networkStatus = NetworkStatus.error;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (typeof fetchMoreForQueryId === 'string') {\n      this.markQueryResultClient(fetchMoreForQueryId, true);\n    }\n  }\n\n  public markQueryResultClient(queryId: string, complete: boolean) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = null;\n    this.store[queryId].previousVariables = null;\n    this.store[queryId].networkStatus = complete\n      ? NetworkStatus.ready\n      : NetworkStatus.loading;\n  }\n\n  public stopQuery(queryId: string) {\n    delete this.store[queryId];\n  }\n\n  public reset(observableQueryIds: string[]) {\n    // keep only the queries with query ids that are associated with observables\n    this.store = Object.keys(this.store)\n      .filter(queryId => {\n        return observableQueryIds.indexOf(queryId) > -1;\n      })\n      .reduce(\n        (res, key) => {\n          // XXX set loading to true so listeners don't trigger unless they want results with partial data\n          res[key] = {\n            ...this.store[key],\n            networkStatus: NetworkStatus.loading,\n          };\n\n          return res;\n        },\n        {} as { [queryId: string]: QueryStoreValue },\n      );\n  }\n}\n","export function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import {\n  ExecutionResult,\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n} from 'graphql';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nimport { ApolloCache } from 'apollo-cache';\nimport {\n  getMainDefinition,\n  buildQueryFromSelectionSet,\n  hasDirectives,\n  removeClientSetsFromDocument,\n  mergeDeep,\n  mergeDeepArray,\n  FragmentMap,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getFragmentDefinitions,\n  createFragmentMap,\n  shouldInclude,\n  isField,\n  isInlineFragment,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport ApolloClient from '../ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { capitalizeFirstLetter } from '../util/capitalizeFirstLetter';\n\nexport type Resolver = (\n  fieldName: string,\n  rootValue: any,\n  args: any,\n  context: any,\n  info: {\n    field: FieldNode;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: ExecutionResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<ExecutionResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n      invariant.warn(\n        'Found @client directives in query but no client resolvers were specified. ' +\n          'You can now pass apollo-link-state resolvers to the ApolloClient constructor.',\n      );\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return this.resolvers ? removeClientSetsFromDocument(document) : document;\n  }\n\n  public prepareContext(context = {}) {\n    const { cache } = this;\n\n    const newContext = {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey: (obj: { __typename: string; id: string | number }) => {\n        if ((cache as any).config) {\n          return (cache as any).config.dataIdFromObject(obj);\n        } else {\n          invariant(false,\n            'To use context.getCacheKey, you need to use a cache that has ' +\n              'a configurable dataIdFromObject, like apollo-cache-inmemory.',\n          );\n        }\n      },\n    };\n\n    return newContext;\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  public shouldForceResolver(field: FieldNode) {\n    return this.shouldForceResolvers(field);\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? capitalizeFirstLetter(definitionOperation)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolver(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(resolve(\n            rootValue,\n            argumentsObjectFromField(field, variables),\n            execContext.context,\n            { field },\n          ));\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n","import { execute, ApolloLink, FetchResult } from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { DedupLink as Deduplicator } from 'apollo-link-dedup';\nimport { Cache } from 'apollo-cache';\nimport {\n  assign,\n  getDefaultValues,\n  getMutationDefinition,\n  getOperationDefinition,\n  getOperationName,\n  getQueryDefinition,\n  hasDirectives,\n  graphQLResultHasError,\n  hasClientExports,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observer, Subscription, Observable } from '../util/Observable';\nimport { QueryWithUpdater, DataStore } from '../data/store';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore, QueryStoreValue } from '../data/queries';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n} from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  QueryListener,\n  ApolloQueryResult,\n  FetchType,\n  OperationVariables,\n} from './types';\nimport { LocalState } from './LocalState';\n\nexport interface QueryInfo {\n  listeners: QueryListener[];\n  invalidated: boolean;\n  newData: Cache.DiffResult<any> | null;\n  document: DocumentNode | null;\n  lastRequestId: number | null;\n  // A map going from queryId to an observer for a query issued by watchQuery. We use\n  // these to keep track of queries that are inflight and error on the observers associated\n  // with them in case of some destabalizing action (e.g. reset of the Apollo store).\n  observableQuery: ObservableQuery<any> | null;\n  subscriptions: Subscription[];\n  cancel?: () => void;\n}\n\nexport class QueryManager<TStore> {\n  public link: ApolloLink;\n  public mutationStore: MutationStore = new MutationStore();\n  public queryStore: QueryStore = new QueryStore();\n  public dataStore: DataStore<TStore>;\n\n  private deduplicator: ApolloLink;\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast: () => void;\n\n  private ssrMode: boolean;\n\n  // let's not start at zero to avoid pain with bad checks\n  private idCounter = 1;\n\n  // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n  // subscriptions as well\n  private queries: Map<string, QueryInfo> = new Map();\n\n  // A map of Promise reject functions for fetchQuery promises that have not\n  // yet been resolved, used to keep track of in-flight queries so that we can\n  // reject them in case a destabilizing event occurs (e.g. Apollo store reset).\n  // The key is in the format of `query:${queryId}` or `fetchRequest:${queryId}`,\n  // depending on where the promise's rejection function was created from.\n  private fetchQueryRejectFns = new Map<string, Function>();\n\n  // A map going from the name of a query to an observer issued for it by watchQuery. This is\n  // generally used to refetches for refetchQueries and to update mutation results through\n  // updateQueries.\n  private queryIdsByName: { [queryName: string]: string[] } = {};\n\n  constructor({\n    link,\n    queryDeduplication = false,\n    store,\n    onBroadcast = () => undefined,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n  }: {\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    store: DataStore<TStore>;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n  }) {\n    this.link = link;\n    this.deduplicator = ApolloLink.from([new Deduplicator(), link]);\n    this.queryDeduplication = queryDeduplication;\n    this.dataStore = store;\n    this.onBroadcast = onBroadcast;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache: store.getCache() });\n    this.ssrMode = ssrMode;\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(new Error('QueryManager stopped while query was in flight'));\n    });\n  }\n\n  public async mutate<T>({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries: updateQueriesByName,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    errorPolicy = 'none',\n    fetchPolicy,\n    context = {},\n  }: MutationOptions): Promise<FetchResult<T>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      !fetchPolicy || fetchPolicy === 'no-cache',\n      \"fetchPolicy for mutations currently only supports the 'no-cache' policy\"\n    );\n\n    const mutationId = this.generateQueryId();\n    const cache = this.dataStore.getCache();\n    (mutation = cache.transformDocument(mutation)),\n      (variables = assign(\n        {},\n        getDefaultValues(getMutationDefinition(mutation)),\n        variables,\n      ));\n\n    this.setQuery(mutationId, () => ({ document: mutation }));\n\n    // Create a map of update queries by id to the query instead of by name.\n    const generateUpdateQueriesInfo: () => {\n      [queryId: string]: QueryWithUpdater;\n    } = () => {\n      const ret: { [queryId: string]: QueryWithUpdater } = {};\n\n      if (updateQueriesByName) {\n        Object.keys(updateQueriesByName).forEach(queryName =>\n          (this.queryIdsByName[queryName] || []).forEach(queryId => {\n            ret[queryId] = {\n              updater: updateQueriesByName[queryName],\n              query: this.queryStore.get(queryId),\n            };\n          }),\n        );\n      }\n\n      return ret;\n    };\n\n    const updatedVariables: OperationVariables =\n      hasClientExports(mutation)\n        ? await this.localState.addExportedVariables(\n            mutation,\n            variables,\n            context,\n          )\n        : variables;\n\n    this.mutationStore.initMutation(\n      mutationId,\n      mutation,\n      updatedVariables,\n    );\n\n    this.dataStore.markMutationInit({\n      mutationId,\n      document: mutation,\n      variables: updatedVariables || {},\n      updateQueries: generateUpdateQueriesInfo(),\n      update: updateWithProxyFn,\n      optimisticResponse,\n    });\n\n    this.broadcastQueries();\n\n    return new Promise((resolve, reject) => {\n      let storeResult: FetchResult<T> | null;\n      let error: ApolloError;\n\n      const operation = this.buildOperationForLink(mutation, updatedVariables, {\n        ...context,\n        optimisticResponse,\n      });\n\n      const completeMutation = () => {\n        if (error) {\n          this.mutationStore.markMutationError(mutationId, error);\n        }\n\n        this.dataStore.markMutationComplete({\n          mutationId,\n          optimisticResponse,\n        });\n\n        this.broadcastQueries();\n\n        if (error) {\n          return Promise.reject(error);\n        }\n\n        // allow for conditional refetches\n        // XXX do we want to make this the only API one day?\n        if (typeof refetchQueries === 'function') {\n          refetchQueries = refetchQueries(storeResult as ExecutionResult);\n        }\n\n        const refetchQueryPromises: Promise<\n          ApolloQueryResult<any>[] | ApolloQueryResult<{}>\n        >[] = [];\n\n        for (const refetchQuery of refetchQueries) {\n          if (typeof refetchQuery === 'string') {\n            const promise = this.refetchQueryByName(refetchQuery);\n            if (promise) {\n              refetchQueryPromises.push(promise);\n            }\n            continue;\n          }\n\n          const queryOptions: QueryOptions = {\n            query: refetchQuery.query,\n            variables: refetchQuery.variables,\n            fetchPolicy: 'network-only',\n          };\n\n          if (refetchQuery.context) {\n            queryOptions.context = refetchQuery.context;\n          }\n\n          refetchQueryPromises.push(this.query(queryOptions));\n        }\n\n        return Promise.all(\n          awaitRefetchQueries ? refetchQueryPromises : [],\n        ).then(() => {\n          this.setQuery(mutationId, () => ({ document: null }));\n\n          if (\n            errorPolicy === 'ignore' &&\n            storeResult &&\n            graphQLResultHasError(storeResult)\n          ) {\n            delete storeResult.errors;\n          }\n\n          return storeResult as FetchResult<T>;\n        });\n      };\n\n      const clientQuery = this.localState.clientQuery(operation.query);\n      const serverQuery = this.localState.serverQuery(operation.query);\n      if (serverQuery) {\n        operation.query = serverQuery;\n      }\n\n      const obs: Observable<FetchResult> = serverQuery\n        ? execute(this.link, operation)\n        : Observable.of({\n            data: {},\n          });\n\n      const self = this;\n      let complete = false;\n      let handlingNext = false;\n      obs.subscribe({\n        next: async (result: ExecutionResult) => {\n          handlingNext = true;\n\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            handlingNext = false;\n            error = new ApolloError({\n              graphQLErrors: result.errors,\n            });\n            return;\n          }\n\n          self.mutationStore.markMutationResult(mutationId);\n          let updatedResult = result;\n          const { context, variables } = operation;\n\n          // Run the query through local client resolvers.\n          if (clientQuery && hasDirectives(['client'], clientQuery)) {\n            updatedResult = await self.localState\n              .runResolvers({\n                document: clientQuery,\n                remoteResult: result,\n                context,\n                variables,\n              })\n              .catch(error => {\n                handlingNext = false;\n                reject(error);\n                return result;\n              });\n          }\n\n          if (fetchPolicy !== 'no-cache') {\n            self.dataStore.markMutationResult({\n              mutationId,\n              result: updatedResult,\n              document: mutation,\n              variables: updatedVariables || {},\n              updateQueries: generateUpdateQueriesInfo(),\n              update: updateWithProxyFn,\n            });\n          }\n\n          storeResult = updatedResult as FetchResult<T>;\n\n          handlingNext = false;\n          if (complete) {\n            completeMutation().then(resolve, reject);\n          }\n        },\n\n        error(err: Error) {\n          self.mutationStore.markMutationError(mutationId, err);\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n          self.broadcastQueries();\n\n          self.setQuery(mutationId, () => ({ document: null }));\n          reject(\n            new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n\n        complete() {\n          if (!handlingNext) {\n            completeMutation().then(resolve, reject);\n          }\n          complete = true;\n        },\n      });\n    });\n  }\n\n  public async fetchQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    fetchType?: FetchType,\n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId?: string,\n  ): Promise<FetchResult<T>> {\n    const {\n      variables = {},\n      metadata = null,\n      fetchPolicy = 'cache-first', // cache-first is the default fetch policy.\n      context = {},\n    } = options;\n    const cache = this.dataStore.getCache();\n    const query = cache.transformDocument(options.query);\n\n    const updatedVariables: OperationVariables =\n      hasClientExports(query)\n        ? await this.localState.addExportedVariables(query, variables, context)\n        : variables;\n\n    const updatedOptions: WatchQueryOptions = {\n      ...options,\n      ...{ variables: updatedVariables },\n    };\n\n    let storeResult: any;\n    let needToFetch: boolean =\n      fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n\n    // If this is not a force fetch, we want to diff the query against the\n    // store before we fetch it from the network interface.\n    // TODO we hit the cache even if the policy is network-first. This could be unnecessary if the network is up.\n    if (\n      fetchType !== FetchType.refetch &&\n      fetchPolicy !== 'network-only' &&\n      fetchPolicy !== 'no-cache'\n    ) {\n      const { complete, result } = this.dataStore.getCache().diff({\n        query,\n        variables: updatedVariables,\n        returnPartialData: true,\n        optimistic: false,\n      });\n\n      // If we're in here, only fetch if we have missing fields\n      needToFetch = !complete || fetchPolicy === 'cache-and-network';\n      storeResult = result;\n    }\n\n    let shouldFetch =\n      needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n\n    // we need to check to see if this is an operation that uses the @live directive\n    if (hasDirectives(['live'], query)) shouldFetch = true;\n\n    const requestId = this.generateRequestId();\n\n    // set up a watcher to listen to cache updates\n    const cancel = this.updateQueryWatch(queryId, query, updatedOptions);\n\n    // Initialize query in store with unique requestId\n    this.setQuery(queryId, () => ({\n      document: query,\n      lastRequestId: requestId,\n      invalidated: true,\n      cancel,\n    }));\n\n    this.invalidate(true, fetchMoreForQueryId);\n\n    this.queryStore.initQuery({\n      queryId,\n      document: query,\n      storePreviousVariables: shouldFetch,\n      variables: updatedVariables,\n      isPoll: fetchType === FetchType.poll,\n      isRefetch: fetchType === FetchType.refetch,\n      metadata,\n      fetchMoreForQueryId,\n    });\n\n    this.broadcastQueries();\n\n    // If there is no part of the query we need to fetch from the server (or,\n    // fetchPolicy is cache-only), we just write the store result as the final result.\n    const shouldDispatchClientResult =\n      !shouldFetch || fetchPolicy === 'cache-and-network';\n    if (shouldDispatchClientResult) {\n      this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n      this.invalidate(true, queryId, fetchMoreForQueryId);\n      this.broadcastQueries(this.localState.shouldForceResolvers(query));\n    }\n\n    if (shouldFetch) {\n      const networkResult = this.fetchRequest<T>({\n        requestId,\n        queryId,\n        document: query,\n        options: updatedOptions,\n        fetchMoreForQueryId,\n      }).catch(error => {\n        // This is for the benefit of `refetch` promises, which currently don't get their errors\n        // through the store like watchQuery observers do\n        if (isApolloError(error)) {\n          throw error;\n        } else {\n          const { lastRequestId } = this.getQuery(queryId);\n          if (requestId >= (lastRequestId || 1)) {\n            this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n\n            this.broadcastQueries();\n          }\n\n          throw new ApolloError({ networkError: error });\n        }\n      });\n\n      // we don't return the promise for cache-and-network since it is already\n      // returned below from the cache\n      if (fetchPolicy !== 'cache-and-network') {\n        return networkResult;\n      } else {\n        // however we need to catch the error so it isn't unhandled in case of\n        // network error\n        networkResult.catch(() => {});\n      }\n    }\n\n    // If we have no query to send to the server, we should return the result\n    // found within the store.\n    return Promise.resolve({ data: storeResult });\n  }\n\n  // Returns a query listener that will update the given observer based on the\n  // results (or lack thereof) for a particular query.\n  public queryListenerForObserver<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ): QueryListener {\n    let previouslyHadError: boolean = false;\n    return async (\n      queryStoreValue: QueryStoreValue,\n      newData?: Cache.DiffResult<T>,\n      forceResolvers?: boolean,\n    ) => {\n      // we're going to take a look at the data, so the query is no longer invalidated\n      this.invalidate(false, queryId);\n\n      // The query store value can be undefined in the event of a store\n      // reset.\n      if (!queryStoreValue) return;\n\n      const { observableQuery } = this.getQuery(queryId);\n\n      const fetchPolicy = observableQuery\n        ? observableQuery.options.fetchPolicy\n        : options.fetchPolicy;\n\n      // don't watch the store for queries on standby\n      if (fetchPolicy === 'standby') return;\n\n      const errorPolicy = observableQuery\n        ? observableQuery.options.errorPolicy\n        : options.errorPolicy;\n\n      const lastResult = observableQuery\n        ? observableQuery.getLastResult()\n        : null;\n\n      const lastError = observableQuery ? observableQuery.getLastError() : null;\n\n      let shouldNotifyIfLoading =\n        (!newData && queryStoreValue.previousVariables != null) ||\n        fetchPolicy === 'cache-only' ||\n        fetchPolicy === 'cache-and-network';\n\n      // if this caused by a cache broadcast but the query is still in flight\n      // don't notify the observer\n      // if (\n      //   isCacheBroadcast &&\n      //   isNetworkRequestInFlight(queryStoreValue.networkStatus)\n      // ) {\n      //   shouldNotifyIfLoading = false;\n      // }\n\n      const networkStatusChanged = Boolean(\n        lastResult &&\n          queryStoreValue.networkStatus !== lastResult.networkStatus,\n      );\n\n      const errorStatusChanged =\n        errorPolicy &&\n        (lastError && lastError.graphQLErrors) !==\n          queryStoreValue.graphQLErrors &&\n        errorPolicy !== 'none';\n\n      if (\n        !isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n        (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n        shouldNotifyIfLoading\n      ) {\n        // If we have either a GraphQL error or a network error, we create\n        // an error and tell the observer about it.\n        if (\n          ((!errorPolicy || errorPolicy === 'none') &&\n            queryStoreValue.graphQLErrors &&\n            queryStoreValue.graphQLErrors.length > 0) ||\n          queryStoreValue.networkError\n        ) {\n          const apolloError = new ApolloError({\n            graphQLErrors: queryStoreValue.graphQLErrors,\n            networkError: queryStoreValue.networkError,\n          });\n          previouslyHadError = true;\n          if (observer.error) {\n            try {\n              observer.error(apolloError);\n            } catch (e) {\n              // Throw error outside this control flow to avoid breaking Apollo's state\n              setTimeout(() => {\n                throw e;\n              }, 0);\n            }\n          } else {\n            // Throw error outside this control flow to avoid breaking Apollo's state\n            setTimeout(() => {\n              throw apolloError;\n            }, 0);\n            if (process.env.NODE_ENV !== 'production') {\n              /* tslint:disable-next-line */\n              console.info(\n                'An unhandled error was thrown because no error handler is registered ' +\n                  'for the query ' +\n                  JSON.stringify(queryStoreValue.document),\n              );\n            }\n          }\n          return;\n        }\n\n        try {\n          let data: any;\n          let isMissing: boolean;\n\n          if (newData) {\n            // As long as we're using the cache, clear out the latest\n            // `newData`, since it will now become the current data. We need\n            // to keep the `newData` stored with the query when using\n            // `no-cache` since `getCurrentQueryResult` attemps to pull from\n            // `newData` first, following by trying the cache (which won't\n            // find a hit for `no-cache`).\n            if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n              this.setQuery(queryId, () => ({ newData: null }));\n            }\n\n            data = newData.result;\n            isMissing = !newData.complete || false;\n          } else {\n            if (lastResult && lastResult.data && !errorStatusChanged) {\n              data = lastResult.data;\n              isMissing = false;\n            } else {\n              const { document } = this.getQuery(queryId);\n              const readResult = this.dataStore.getCache().diff({\n                query: document as DocumentNode,\n                variables:\n                  queryStoreValue.previousVariables ||\n                  queryStoreValue.variables,\n                optimistic: true,\n              });\n\n              data = readResult.result;\n              isMissing = !readResult.complete;\n            }\n          }\n\n          let resultFromStore: ApolloQueryResult<T>;\n\n          // If there is some data missing and the user has told us that they\n          // do not tolerate partial data then we want to return the previous\n          // result and mark it as stale.\n          if (isMissing && fetchPolicy !== 'cache-only') {\n            resultFromStore = {\n              data: lastResult && lastResult.data,\n              loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n              networkStatus: queryStoreValue.networkStatus,\n              stale: true,\n            };\n          } else {\n            resultFromStore = {\n              data,\n              loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n              networkStatus: queryStoreValue.networkStatus,\n              stale: false,\n            };\n          }\n\n          // if the query wants updates on errors we need to add it to the result\n          if (\n            errorPolicy === 'all' &&\n            queryStoreValue.graphQLErrors &&\n            queryStoreValue.graphQLErrors.length > 0\n          ) {\n            resultFromStore.errors = queryStoreValue.graphQLErrors;\n          }\n\n          if (observer.next) {\n            if (\n              previouslyHadError ||\n              !observableQuery ||\n              observableQuery.isDifferentFromLastResult(resultFromStore)\n            ) {\n              try {\n                // Local resolvers can be forced by using\n                // `@client(always: true)` syntax. If any resolvers are\n                // forced, we'll make sure they're run here to override any\n                // data returned from the cache. Only the selection sets and\n                // fields marked with `@client(always: true)` are overwritten.\n                if (forceResolvers) {\n                  const { query, variables, context } = options;\n\n                  const updatedResult = await this.localState.runResolvers({\n                    document: query,\n                    remoteResult: resultFromStore,\n                    context,\n                    variables,\n                    onlyRunForcedResolvers: forceResolvers,\n                  });\n\n                  resultFromStore = {\n                    ...resultFromStore,\n                    ...updatedResult,\n                  };\n                }\n\n                observer.next(resultFromStore);\n              } catch (e) {\n                // Throw error outside this control flow to avoid breaking Apollo's state\n                setTimeout(() => {\n                  throw e;\n                }, 0);\n              }\n            }\n          }\n          previouslyHadError = false;\n        } catch (error) {\n          previouslyHadError = true;\n          if (observer.error)\n            observer.error(new ApolloError({ networkError: error }));\n          return;\n        }\n      }\n    };\n  }\n\n  // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n  // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n  // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n  // but we don't want to keep track observables issued for the query method since those aren't\n  // supposed to be refetched in the event of a store reset. Once we unify error handling for\n  // network errors and non-network errors, the shouldSubscribe option will go away.\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions,\n    shouldSubscribe = true,\n  ): ObservableQuery<T, TVariables> {\n    invariant(\n      options.fetchPolicy !== 'standby',\n      'client.watchQuery cannot be called with fetchPolicy set to \"standby\"',\n    );\n\n    // get errors synchronously\n    const queryDefinition = getQueryDefinition(options.query);\n\n    // assign variable default values if supplied\n    if (\n      queryDefinition.variableDefinitions &&\n      queryDefinition.variableDefinitions.length\n    ) {\n      const defaultValues = getDefaultValues(queryDefinition);\n\n      options.variables = assign({}, defaultValues, options.variables);\n    }\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    let transformedOptions = { ...options } as WatchQueryOptions<TVariables>;\n\n    return new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      options: transformedOptions,\n      shouldSubscribe: shouldSubscribe,\n    });\n  }\n\n  public query<T>(options: QueryOptions): Promise<ApolloQueryResult<T>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const watchedQuery = this.watchQuery<T>(options, false);\n      this.fetchQueryRejectFns.set(`query:${watchedQuery.queryId}`, reject);\n      watchedQuery\n        .result()\n        .then(resolve, reject)\n        // Since neither resolve nor reject throw or return a value, this .then\n        // handler is guaranteed to execute. Note that it doesn't really matter\n        // when we remove the reject function from this.fetchQueryRejectFns,\n        // since resolve and reject are mutually idempotent. In fact, it would\n        // not be incorrect to let reject functions accumulate over time; it's\n        // just a waste of memory.\n        .then(() =>\n          this.fetchQueryRejectFns.delete(`query:${watchedQuery.queryId}`),\n        );\n    });\n  }\n\n  public generateQueryId() {\n    const queryId = this.idCounter.toString();\n    this.idCounter++;\n    return queryId;\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    this.stopPollingQuery(queryId);\n    this.queryStore.stopQuery(queryId);\n    this.invalidate(true, queryId);\n  }\n\n  public addQueryListener(queryId: string, listener: QueryListener) {\n    this.setQuery(queryId, ({ listeners = [] }) => ({\n      listeners: listeners.concat([listener]),\n      invalidated: false,\n    }));\n  }\n\n  public updateQueryWatch(\n    queryId: string,\n    document: DocumentNode,\n    options: WatchQueryOptions,\n  ) {\n    const { cancel } = this.getQuery(queryId);\n    if (cancel) cancel();\n    const previousResult = () => {\n      let previousResult = null;\n      const { observableQuery } = this.getQuery(queryId);\n      if (observableQuery) {\n        const lastResult = observableQuery.getLastResult();\n        if (lastResult) {\n          previousResult = lastResult.data;\n        }\n      }\n\n      return previousResult;\n    };\n    return this.dataStore.getCache().watch({\n      query: document as DocumentNode,\n      variables: options.variables,\n      optimistic: true,\n      previousResult,\n      callback: newData => {\n        this.setQuery(queryId, () => ({ invalidated: true, newData }));\n      },\n    });\n  }\n\n  // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n  public addObservableQuery<T>(\n    queryId: string,\n    observableQuery: ObservableQuery<T>,\n  ) {\n    this.setQuery(queryId, () => ({ observableQuery }));\n\n    // Insert the ObservableQuery into this.observableQueriesByName if the query has a name\n    const queryDef = getQueryDefinition(observableQuery.options.query);\n    if (queryDef.name && queryDef.name.value) {\n      const queryName = queryDef.name.value;\n\n      // XXX we may we want to warn the user about query name conflicts in the future\n      this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n      this.queryIdsByName[queryName].push(observableQuery.queryId);\n    }\n  }\n\n  public removeObservableQuery(queryId: string) {\n    const { observableQuery, cancel } = this.getQuery(queryId);\n    if (cancel) cancel();\n    if (!observableQuery) return;\n\n    const definition = getQueryDefinition(observableQuery.options.query);\n    const queryName = definition.name ? definition.name.value : null;\n    this.setQuery(queryId, () => ({ observableQuery: null }));\n    if (queryName) {\n      this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(\n        val => {\n          return !(observableQuery.queryId === val);\n        },\n      );\n    }\n  }\n\n  public clearStore(): Promise<void> {\n    // Before we have sent the reset action to the store,\n    // we can no longer rely on the results returned by in-flight\n    // requests since these may depend on values that previously existed\n    // in the data portion of the store. So, we cancel the promises and observers\n    // that we have issued so far and not yet resolved (in the case of\n    // queries).\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(\n        new Error(\n          'Store reset while query was in flight(not completed in link chain)',\n        ),\n      );\n    });\n\n    const resetIds: string[] = [];\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) resetIds.push(queryId);\n    });\n\n    this.queryStore.reset(resetIds);\n    this.mutationStore.reset();\n\n    // begin removing data from the store\n    const reset = this.dataStore.reset();\n\n    return reset;\n  }\n\n  public resetStore(): Promise<ApolloQueryResult<any>[]> {\n    // Similarly, we have to have to refetch each of the queries currently being\n    // observed. We refetch instead of error'ing on these since the assumption is that\n    // resetting the store doesn't eliminate the need for the queries currently being\n    // watched. If there is an existing query in flight when the store is reset,\n    // the promise for it will be rejected and its results will not be written to the\n    // store.\n    return this.clearStore().then(() => {\n      return this.reFetchObservableQueries();\n    });\n  }\n\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<\n      ApolloQueryResult<any>\n    >[] = this.getObservableQueryPromises(includeStandby);\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public startQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    listener: QueryListener,\n  ) {\n    this.addQueryListener(queryId, listener);\n\n    this.fetchQuery<T>(queryId, options)\n      // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n      // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n      .catch(() => undefined);\n\n    return queryId;\n  }\n\n  public startGraphQLSubscription<T = any>(\n    options: SubscriptionOptions,\n  ): Observable<T> {\n    const { query } = options;\n    const isCacheEnabled = !(\n      options.fetchPolicy && options.fetchPolicy === 'no-cache'\n    );\n    const cache = this.dataStore.getCache();\n    let transformedDoc = cache.transformDocument(query);\n\n    const variables = assign(\n      {},\n      getDefaultValues(getOperationDefinition(query)),\n      options.variables,\n    );\n\n    let updatedVariables = variables;\n    let sub: Subscription;\n    let observers: Observer<any>[] = [];\n    const clientQuery = this.localState.clientQuery(transformedDoc);\n\n    return new Observable(observer => {\n      observers.push(observer);\n\n      // If this is the first observer, actually initiate the network\n      // subscription.\n      if (observers.length === 1) {\n        let activeNextCalls = 0;\n        let complete = false;\n\n        const handler = {\n          next: async (result: FetchResult) => {\n            activeNextCalls += 1;\n            let updatedResult = result;\n\n            // Run the query through local client resolvers.\n            if (clientQuery && hasDirectives(['client'], clientQuery)) {\n              updatedResult = await this.localState.runResolvers({\n                document: clientQuery,\n                remoteResult: result,\n                context: {},\n                variables: updatedVariables,\n              });\n            }\n\n            if (isCacheEnabled) {\n              this.dataStore.markSubscriptionResult(\n                updatedResult,\n                transformedDoc,\n                updatedVariables,\n              );\n              this.broadcastQueries();\n            }\n\n            observers.forEach(obs => {\n              // If an error exists and a `error` handler has been defined on\n              // the observer, call that `error` handler and make sure the\n              // `next` handler is skipped. If no `error` handler exists, we're\n              // still passing any errors that might occur into the `next`\n              // handler, to give that handler a chance to deal with the\n              // error (we're doing this for backwards compatibilty).\n              if (graphQLResultHasError(updatedResult) && obs.error) {\n                obs.error(\n                  new ApolloError({\n                    graphQLErrors: updatedResult.errors,\n                  }),\n                );\n              } else if (obs.next) {\n                obs.next(updatedResult);\n              }\n              activeNextCalls -= 1;\n            });\n\n            if (activeNextCalls === 0 && complete) {\n              handler.complete();\n            }\n          },\n          error: (error: Error) => {\n            observers.forEach(obs => {\n              if (obs.error) {\n                obs.error(error);\n              }\n            });\n          },\n          complete: () => {\n            if (activeNextCalls === 0) {\n              observers.forEach(obs => {\n                if (obs.complete) {\n                  obs.complete();\n                }\n              });\n            }\n            complete = true;\n          }\n        };\n\n        (async () => {\n          const updatedVariables: OperationVariables =\n            hasClientExports(transformedDoc)\n              ? await this.localState.addExportedVariables(\n                  transformedDoc,\n                  variables\n                )\n              : variables;\n          const serverQuery = this.localState.serverQuery(transformedDoc);\n          if (serverQuery) {\n            const operation = this.buildOperationForLink(\n              serverQuery,\n              updatedVariables,\n            );\n            sub = execute(this.link, operation).subscribe(handler);\n          } else {\n            sub = Observable.of({ data: {} }).subscribe(handler);\n          }\n        })();\n      }\n\n      return () => {\n        observers = observers.filter(obs => obs !== observer);\n\n        // If we removed the last observer, tear down the network subscription\n        if (observers.length === 0 && sub) {\n          sub.unsubscribe();\n        }\n      };\n    });\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    const { subscriptions } = this.getQuery(queryId);\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchQueryRejectFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchQueryRejectFns.delete(`query:${queryId}`);\n    this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n    subscriptions.forEach(x => x.unsubscribe());\n    this.queries.delete(queryId);\n  }\n\n  public getCurrentQueryResult<T>(\n    observableQuery: ObservableQuery<T>,\n    optimistic: boolean = true,\n  ): {\n    data: T | undefined;\n    partial: boolean;\n  } {\n    const { variables, query, fetchPolicy } = observableQuery.options;\n    const lastResult = observableQuery.getLastResult();\n    const { newData } = this.getQuery(observableQuery.queryId);\n\n    // XXX test this\n    if (newData && newData.complete) {\n      return { data: newData.result, partial: false };\n    } else if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n      return { data: undefined, partial: false };\n    } else {\n      try {\n        // the query is brand new, so we read from the store to see if anything is there\n        const data =\n          this.dataStore.getCache().read<T>({\n            query,\n            variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            optimistic,\n          }) || undefined;\n\n        return { data, partial: false };\n      } catch (e) {\n        return { data: undefined, partial: true };\n      }\n    }\n  }\n\n  public getQueryWithPreviousResult<T>(\n    queryIdOrObservable: string | ObservableQuery<T>,\n  ): {\n    previousResult: any;\n    variables: OperationVariables | undefined;\n    document: DocumentNode;\n  } {\n    let observableQuery: ObservableQuery<T>;\n    if (typeof queryIdOrObservable === 'string') {\n      const { observableQuery: foundObserveableQuery } = this.getQuery(\n        queryIdOrObservable,\n      );\n      invariant(\n        foundObserveableQuery,\n        `ObservableQuery with this id doesn't exist: ${queryIdOrObservable}`\n      );\n      observableQuery = foundObserveableQuery!;\n    } else {\n      observableQuery = queryIdOrObservable;\n    }\n\n    const { variables, query } = observableQuery.options;\n\n    const { data } = this.getCurrentQueryResult(observableQuery, false);\n\n    return {\n      previousResult: data,\n      variables,\n      document: query,\n    };\n  }\n\n  public broadcastQueries(forceResolvers = false) {\n    this.onBroadcast();\n    this.queries.forEach((info, id) => {\n      if (!info.invalidated || !info.listeners) return;\n      info.listeners\n        // it's possible for the listener to be undefined if the query is being stopped\n        // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n        .filter((x: QueryListener) => !!x)\n        .forEach((listener: QueryListener) => {\n          listener(this.queryStore.get(id), info.newData, forceResolvers);\n        });\n    });\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private getObservableQueryPromises(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>>[] {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (!observableQuery) return;\n      const fetchPolicy = observableQuery.options.fetchPolicy;\n\n      observableQuery.resetLastResults();\n      if (\n        fetchPolicy !== 'cache-only' &&\n        (includeStandby || fetchPolicy !== 'standby')\n      ) {\n        observableQueryPromises.push(observableQuery.refetch());\n      }\n\n      this.setQuery(queryId, () => ({ newData: null }));\n      this.invalidate(true, queryId);\n    });\n\n    return observableQueryPromises;\n  }\n\n  // Takes a request id, query id, a query document and information associated with the query\n  // and send it to the network interface. Returns\n  // a promise for the result associated with that request.\n  private fetchRequest<T>({\n    requestId,\n    queryId,\n    document,\n    options,\n    fetchMoreForQueryId,\n  }: {\n    requestId: number;\n    queryId: string;\n    document: DocumentNode;\n    options: WatchQueryOptions;\n    fetchMoreForQueryId?: string;\n  }): Promise<FetchResult<T>> {\n    const { variables, context, errorPolicy = 'none', fetchPolicy } = options;\n    let resultFromStore: any;\n    let errorsFromStore: any;\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      let obs: Observable<FetchResult>;\n      let updatedContext = {};\n\n      const clientQuery = this.localState.clientQuery(document);\n      const serverQuery = this.localState.serverQuery(document);\n      if (serverQuery) {\n        const operation = this.buildOperationForLink(serverQuery, variables, {\n          ...context,\n          forceFetch: !this.queryDeduplication,\n        });\n        updatedContext = operation.context;\n        obs = execute(this.deduplicator, operation);\n      } else {\n        updatedContext = this.prepareContext(context);\n        obs = Observable.of({ data: {} });\n      }\n\n      this.fetchQueryRejectFns.set(`fetchRequest:${queryId}`, reject);\n\n      let complete = false;\n      let handlingNext = true;\n\n      const subscriber = {\n        next: async (result: ExecutionResult) => {\n          handlingNext = true;\n          let updatedResult = result;\n\n          // default the lastRequestId to 1\n          const { lastRequestId } = this.getQuery(queryId);\n          if (requestId >= (lastRequestId || 1)) {\n            // Run the query through local client resolvers.\n            if (clientQuery && hasDirectives(['client'], clientQuery)) {\n              updatedResult = await this.localState\n                .runResolvers({\n                  document: clientQuery,\n                  remoteResult: result,\n                  context: updatedContext,\n                  variables,\n                })\n                .catch(error => {\n                  handlingNext = false;\n                  reject(error);\n                  return result;\n                });\n            }\n\n            if (fetchPolicy !== 'no-cache') {\n              try {\n                this.dataStore.markQueryResult(\n                  updatedResult,\n                  document,\n                  variables,\n                  fetchMoreForQueryId,\n                  errorPolicy === 'ignore' || errorPolicy === 'all',\n                );\n              } catch (e) {\n                handlingNext = false;\n                reject(e);\n                return;\n              }\n            } else {\n              this.setQuery(queryId, () => ({\n                newData: { result: updatedResult.data, complete: true },\n              }));\n            }\n\n            this.queryStore.markQueryResult(\n              queryId,\n              updatedResult,\n              fetchMoreForQueryId,\n            );\n\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n\n            this.broadcastQueries();\n          }\n\n          if (updatedResult.errors && errorPolicy === 'none') {\n            handlingNext = false;\n            reject(\n              new ApolloError({\n                graphQLErrors: updatedResult.errors,\n              }),\n            );\n            return;\n          } else if (errorPolicy === 'all') {\n            errorsFromStore = updatedResult.errors;\n          }\n\n          if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n            // We don't write fetchMore results to the store because this would overwrite\n            // the original result in case an @connection directive is used.\n            resultFromStore = updatedResult.data;\n          } else {\n            try {\n              // ensure result is combined with data already in store\n              resultFromStore = this.dataStore.getCache().read({\n                variables,\n                query: document,\n                optimistic: false,\n              });\n              // this will throw an error if there are missing fields in\n              // the results which can happen with errors from the server.\n              // tslint:disable-next-line\n            } catch (e) {}\n          }\n\n          handlingNext = false;\n          if (complete) {\n            subscriber.complete();\n          }\n        },\n        error: (error: ApolloError) => {\n          this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n\n          this.setQuery(queryId, ({ subscriptions }) => ({\n            subscriptions: subscriptions.filter(x => x !== subscription),\n          }));\n\n          reject(error);\n        },\n        complete: () => {\n          if (!handlingNext) {\n            this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n\n            this.setQuery(queryId, ({ subscriptions }) => ({\n              subscriptions: subscriptions.filter(x => x !== subscription),\n            }));\n\n            resolve({\n              data: resultFromStore,\n              errors: errorsFromStore,\n              loading: false,\n              networkStatus: NetworkStatus.ready,\n              stale: false,\n            });\n          }\n          complete = true;\n        },\n      };\n\n      const subscription = obs.subscribe(subscriber);\n\n      this.setQuery(queryId, ({ subscriptions }) => ({\n        subscriptions: subscriptions.concat([subscription]),\n      }));\n    }).catch(error => {\n      this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n      throw error;\n    });\n  }\n\n  // Refetches a query given that query's name. Refetches\n  // all ObservableQuery instances associated with the query name.\n  private refetchQueryByName(queryName: string) {\n    const refetchedQueries = this.queryIdsByName[queryName];\n    // early return if the query named does not exist (not yet fetched)\n    // this used to warn but it may be inteneded behavoir to try and refetch\n    // un called queries because they could be on different routes\n    if (refetchedQueries === undefined) return;\n    return Promise.all(\n      refetchedQueries\n        .map(id => this.getQuery(id).observableQuery)\n        .filter(x => !!x)\n        .map((x: ObservableQuery<any>) => x.refetch()),\n    );\n  }\n\n  private generateRequestId() {\n    const requestId = this.idCounter;\n    this.idCounter++;\n    return requestId;\n  }\n\n  private getQuery(queryId: string) {\n    return (\n      this.queries.get(queryId) || {\n        listeners: [],\n        invalidated: false,\n        document: null,\n        newData: null,\n        lastRequestId: null,\n        observableQuery: null,\n        subscriptions: [],\n      }\n    );\n  }\n\n  private setQuery<T extends keyof QueryInfo>(\n    queryId: string,\n    updater: (prev: QueryInfo) => Pick<QueryInfo, T>,\n  ) {\n    const prev = this.getQuery(queryId);\n    const newInfo = { ...prev, ...updater(prev) };\n    this.queries.set(queryId, newInfo);\n  }\n\n  private invalidate(\n    invalidated: boolean,\n    queryId?: string,\n    fetchMoreForQueryId?: string,\n  ) {\n    if (queryId) this.setQuery(queryId, () => ({ invalidated }));\n\n    if (fetchMoreForQueryId) {\n      this.setQuery(fetchMoreForQueryId, () => ({ invalidated }));\n    }\n  }\n\n  private buildOperationForLink(\n    document: DocumentNode,\n    variables: any,\n    extraContext?: any,\n  ) {\n    const cache = this.dataStore.getCache();\n    return {\n      query: cache.transformForLink\n        ? cache.transformForLink(document)\n        : document,\n      variables,\n      operationName: getOperationName(document) || undefined,\n      context: this.prepareContext(extraContext),\n    };\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n\n  public checkInFlight(queryId: string) {\n    const query = this.queryStore.get(queryId);\n\n    return (\n      query &&\n      query.networkStatus !== NetworkStatus.ready &&\n      query.networkStatus !== NetworkStatus.error\n    );\n  }\n\n  // Map from client ID to { interval, options }.\n  private pollingInfoByQueryId = new Map<string, {\n    interval: number;\n    lastPollTimeMs: number;\n    options: WatchQueryOptions;\n  }>();\n\n  private nextPoll: {\n    time: number;\n    timeout: NodeJS.Timeout;\n  } | null = null;\n\n  public startPollingQuery(\n    options: WatchQueryOptions,\n    queryId: string,\n    listener?: QueryListener,\n  ): string {\n    const { pollInterval } = options;\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    // Do not poll in SSR mode\n    if (!this.ssrMode) {\n      this.pollingInfoByQueryId.set(queryId, {\n        interval: pollInterval!,\n        // Avoid polling until at least pollInterval milliseconds from now.\n        // The -10 is a fudge factor to help with tests that rely on simulated\n        // timeouts via jest.runTimersToTime.\n        lastPollTimeMs: Date.now() - 10,\n        options: {\n          ...options,\n          fetchPolicy: 'network-only',\n        },\n      });\n\n      if (listener) {\n        this.addQueryListener(queryId, listener);\n      }\n\n      this.schedulePoll(pollInterval!);\n    }\n\n    return queryId;\n  }\n\n  public stopPollingQuery(queryId: string) {\n    // Since the master polling interval dynamically adjusts to the contents of\n    // this.pollingInfoByQueryId, stopping a query from polling is as easy as\n    // removing it from the map.\n    this.pollingInfoByQueryId.delete(queryId);\n  }\n\n  // Calling this method ensures a poll will happen within the specified time\n  // limit, canceling any pending polls that would not happen in time.\n  private schedulePoll(timeLimitMs: number) {\n    const now = Date.now();\n\n    if (this.nextPoll) {\n      if (timeLimitMs < this.nextPoll.time - now) {\n        // The next poll will happen too far in the future, so cancel it, and\n        // fall through to scheduling a new timeout.\n        clearTimeout(this.nextPoll.timeout);\n      } else {\n        // The next poll will happen within timeLimitMs, so all is well.\n        return;\n      }\n    }\n\n    this.nextPoll = {\n      // Estimated time when the timeout will fire.\n      time: now + timeLimitMs,\n\n      timeout: setTimeout(() => {\n        this.nextPoll = null;\n        let nextTimeLimitMs = Infinity;\n\n        this.pollingInfoByQueryId.forEach((info, queryId) => {\n          // Pick next timeout according to current minimum interval.\n          if (info.interval < nextTimeLimitMs) {\n            nextTimeLimitMs = info.interval;\n          }\n\n          if (!this.checkInFlight(queryId)) {\n            // If this query was last polled more than interval milliseconds\n            // ago, poll it now. Note that there may be a small delay between\n            // the desired polling time and the actual polling time (equal to\n            // at most the minimum polling interval across all queries), but\n            // that's the tradeoff to batching polling intervals.\n            if (Date.now() - info.lastPollTimeMs >= info.interval) {\n              const updateLastPollTime = () => {\n                info.lastPollTimeMs = Date.now();\n              };\n              this.fetchQuery(queryId, info.options, FetchType.poll).then(\n                // Set info.lastPollTimeMs after the fetch completes, whether\n                // or not it succeeded. Promise.prototype.finally would be nice\n                // here, but we don't have a polyfill for that at the moment,\n                // and this code has historically silenced errors, which is not\n                // the behavior of .finally(updateLastPollTime).\n                updateLastPollTime,\n                updateLastPollTime\n              );\n            }\n          }\n        });\n\n        // If there were no entries in this.pollingInfoByQueryId, then\n        // nextTimeLimitMs will still be Infinity, so this.schedulePoll will\n        // not be called, thus ending the master polling interval.\n        if (isFinite(nextTimeLimitMs)) {\n          this.schedulePoll(nextTimeLimitMs);\n        }\n      }, timeLimitMs),\n    };\n  }\n}\n","import { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, Cache, DataProxy } from 'apollo-cache';\n\nimport { QueryStoreValue } from '../data/queries';\nimport {\n  getOperationName,\n  tryFunctionOrLogError,\n  graphQLResultHasError,\n} from 'apollo-utilities';\nimport { MutationQueryReducer } from '../core/types';\n\nexport type QueryWithUpdater = {\n  updater: MutationQueryReducer<Object>;\n  query: QueryStoreValue;\n};\n\nexport interface DataWrite {\n  rootId: string;\n  result: any;\n  document: DocumentNode;\n  operationName: string | null;\n  variables: Object;\n}\n\nexport class DataStore<TSerialized> {\n  private cache: ApolloCache<TSerialized>;\n\n  constructor(initialCache: ApolloCache<TSerialized>) {\n    this.cache = initialCache;\n  }\n\n  public getCache(): ApolloCache<TSerialized> {\n    return this.cache;\n  }\n\n  public markQueryResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n    fetchMoreForQueryId: string | undefined,\n    ignoreErrors: boolean = false,\n  ) {\n    let writeWithErrors = !graphQLResultHasError(result);\n    if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n      writeWithErrors = true;\n    }\n    if (!fetchMoreForQueryId && writeWithErrors) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_QUERY',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markSubscriptionResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n  ) {\n    // the subscription interface should handle not sending us results we no longer subscribe to.\n    // XXX I don't think we ever send in an object with errors, but we might in the future...\n    if (!graphQLResultHasError(result)) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_SUBSCRIPTION',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markMutationInit(mutation: {\n    mutationId: string;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n    optimisticResponse: Object | Function | undefined;\n  }) {\n    if (mutation.optimisticResponse) {\n      let optimistic: Object;\n      if (typeof mutation.optimisticResponse === 'function') {\n        optimistic = mutation.optimisticResponse(mutation.variables);\n      } else {\n        optimistic = mutation.optimisticResponse;\n      }\n\n      const changeFn = () => {\n        this.markMutationResult({\n          mutationId: mutation.mutationId,\n          result: { data: optimistic },\n          document: mutation.document,\n          variables: mutation.variables,\n          updateQueries: mutation.updateQueries,\n          update: mutation.update,\n        });\n      };\n\n      this.cache.recordOptimisticTransaction(c => {\n        const orig = this.cache;\n        this.cache = c;\n\n        try {\n          changeFn();\n        } finally {\n          this.cache = orig;\n        }\n      }, mutation.mutationId);\n    }\n  }\n\n  public markMutationResult(mutation: {\n    mutationId: string;\n    result: ExecutionResult;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n  }) {\n    // Incorporate the result from this mutation into the store\n    if (!graphQLResultHasError(mutation.result)) {\n      const cacheWrites: Cache.WriteOptions[] = [];\n      cacheWrites.push({\n        result: mutation.result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      });\n\n      if (mutation.updateQueries) {\n        Object.keys(mutation.updateQueries)\n          .filter(id => mutation.updateQueries[id])\n          .forEach(queryId => {\n            const { query, updater } = mutation.updateQueries[queryId];\n            // Read the current query result from the store.\n            const { result: currentQueryResult, complete } = this.cache.diff({\n              query: query.document,\n              variables: query.variables,\n              returnPartialData: true,\n              optimistic: false,\n            });\n\n            if (!complete) {\n              return;\n            }\n\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = tryFunctionOrLogError(() =>\n              updater(currentQueryResult, {\n                mutationResult: mutation.result,\n                queryName: getOperationName(query.document) || undefined,\n                queryVariables: query.variables,\n              }),\n            );\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: query.document,\n                variables: query.variables,\n              });\n            }\n          });\n      }\n\n      this.cache.performTransaction(c => {\n        cacheWrites.forEach(write => c.write(write));\n      });\n\n      // If the mutation has some writes associated with it then we need to\n      // apply those writes to the store by running this reducer again with a\n      // write action.\n      const update = mutation.update;\n      if (update) {\n        this.cache.performTransaction(c => {\n          tryFunctionOrLogError(() => update(c, mutation.result));\n        });\n      }\n    }\n  }\n\n  public markMutationComplete({\n    mutationId,\n    optimisticResponse,\n  }: {\n    mutationId: string;\n    optimisticResponse?: any;\n  }) {\n    if (!optimisticResponse) return;\n    this.cache.removeOptimistic(mutationId);\n  }\n\n  public markUpdateQueryResult(\n    document: DocumentNode,\n    variables: any,\n    newResult: any,\n  ) {\n    this.cache.write({\n      result: newResult,\n      dataId: 'ROOT_QUERY',\n      variables,\n      query: document,\n    });\n  }\n\n  public reset(): Promise<void> {\n    return this.cache.reset();\n  }\n}\n","export const version = \"2.5.1\"","import {\n  ApolloLink,\n  Operation,\n  NextLink,\n  FetchResult,\n  GraphQLRequest,\n  execute,\n} from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, DataProxy } from 'apollo-cache';\nimport {\n  removeConnectionDirectiveFromDocument,\n} from 'apollo-utilities';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { QueryManager } from './core/QueryManager';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  Resolvers,\n} from './core/types';\nimport { ObservableQuery } from './core/ObservableQuery';\nimport { LocalState, FragmentMatcher } from './core/LocalState';\nimport { Observable } from './util/Observable';\n\nimport {\n  QueryBaseOptions,\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ModifiableWatchQueryOptions,\n  MutationBaseOptions,\n} from './core/watchQueryOptions';\n\nimport { DataStore } from './data/store';\n\nimport { version } from './version';\n\n\nexport interface DefaultOptions {\n  watchQuery?: ModifiableWatchQueryOptions;\n  query?: QueryBaseOptions;\n  mutate?: MutationBaseOptions;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport default class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public store: DataStore<TCacheShape>;\n  public cache: ApolloCache<TCacheShape>;\n  public queryManager: QueryManager<TCacheShape> | undefined;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private devToolsHookCb: Function;\n  private proxy: ApolloCache<TCacheShape> | undefined;\n  private ssrMode: boolean;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools,\n      queryDeduplication = true,\n      defaultOptions,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    // If a link hasn't been defined, but local state resolvers have been set,\n    // setup a default empty link.\n    if (!link && resolvers) {\n      link = ApolloLink.empty();\n    }\n\n    if (!link || !cache) {\n      throw new InvariantError(`\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\n        For more information, please visit:\n          https://www.apollographql.com/docs/react/basics/setup.html\n        to help you get started.\n      `);\n    }\n\n    const supportedCache = new Map<DocumentNode, DocumentNode>();\n    const supportedDirectives = new ApolloLink(\n      (operation: Operation, forward: NextLink) => {\n        let result = supportedCache.get(operation.query);\n        if (!result) {\n          result = removeConnectionDirectiveFromDocument(operation.query);\n          supportedCache.set(operation.query, result);\n          supportedCache.set(result, result);\n        }\n        operation.query = result;\n        return forward(operation);\n      },\n    );\n\n    // remove apollo-client supported directives\n    this.link = supportedDirectives.concat(link);\n    this.cache = cache;\n    this.store = new DataStore(cache);\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.ssrMode = ssrMode;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    // Attach the client instance to window to let us be found by chrome devtools, but only in\n    // development mode\n    const defaultConnectToDevTools =\n      process.env.NODE_ENV !== 'production' &&\n      typeof window !== 'undefined' &&\n      !(window as any).__APOLLO_CLIENT__;\n\n    if (\n      typeof connectToDevTools === 'undefined'\n        ? defaultConnectToDevTools\n        : connectToDevTools && typeof window !== 'undefined'\n    ) {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self\n      ) {\n        // First check if devtools is not installed\n        if (\n          typeof (window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined'\n        ) {\n          // Only for Chrome\n          if (\n            window.navigator &&\n            window.navigator.userAgent &&\n            window.navigator.userAgent.indexOf('Chrome') > -1\n          ) {\n            // tslint:disable-next-line\n            console.debug(\n              'Download the Apollo DevTools ' +\n                'for a better development experience: ' +\n                'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm',\n            );\n          }\n        }\n      }\n    }\n\n    this.version = version;\n\n    if (clientAwarenessName) {\n      this.clientAwareness.name = clientAwarenessName;\n    }\n\n    if (clientAwarenessVersion) {\n      this.clientAwareness.version = clientAwarenessVersion;\n    }\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    if (this.queryManager) {\n      this.queryManager.stop();\n    }\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifer, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = {\n        ...this.defaultOptions.watchQuery,\n        ...options,\n      } as WatchQueryOptions<TVariables>;\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.initQueryManager().watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = { ...this.defaultOptions.query, ...options } as QueryOptions<\n        TVariables\n      >;\n    }\n\n    invariant(\n      options.fetchPolicy !== 'cache-and-network',\n      'cache-and-network fetchPolicy can only be used with watchQuery'\n    );\n\n    // XXX Overwriting options is probably not the best way to do this long\n    // term...\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.initQueryManager().query<T>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<T = any, TVariables = OperationVariables>(\n    options: MutationOptions<T, TVariables>,\n  ): Promise<FetchResult<T>> {\n    if (this.defaultOptions.mutate) {\n      options = {\n        ...this.defaultOptions.mutate,\n        ...options,\n      } as MutationOptions<T, TVariables>;\n    }\n\n    return this.initQueryManager().mutate<T>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables>,\n  ): Observable<T> {\n    return this.initQueryManager().startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.initProxy().readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.initProxy().readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    const result = this.initProxy().writeQuery<TData, TVariables>(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    const result = this.initProxy().writeFragment<TData, TVariables>(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Sugar for writeQuery & writeFragment\n   * This method will construct a query from the data object passed in.\n   * If no id is supplied, writeData will write the data to the root.\n   * If an id is supplied, writeData will write a fragment to the object\n   * specified by the id in the store.\n   *\n   * Since you aren't passing in a query to check the shape of the data,\n   * you must pass in an object that conforms to the shape of valid GraphQL data.\n   */\n  public writeData<TData = any>(\n    options: DataProxy.WriteDataOptions<TData>,\n  ): void {\n    const result = this.initProxy().writeData<TData>(options);\n    this.initQueryManager().broadcastQueries();\n    return result;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * This initializes the query manager that tracks queries and the cache\n   */\n  public initQueryManager(): QueryManager<TCacheShape> {\n    if (!this.queryManager) {\n      this.queryManager = new QueryManager({\n        link: this.link,\n        store: this.store,\n        queryDeduplication: this.queryDeduplication,\n        ssrMode: this.ssrMode,\n        clientAwareness: this.clientAwareness,\n        localState: this.localState,\n        onBroadcast: () => {\n          if (this.devToolsHookCb) {\n            this.devToolsHookCb({\n              action: {},\n              state: {\n                queries: this.queryManager\n                  ? this.queryManager.queryStore.getStore()\n                  : {},\n                mutations: this.queryManager\n                  ? this.queryManager.mutationStore.getStore()\n                  : {},\n              },\n              dataWithOptimisticResults: this.cache.extract(true),\n            });\n          }\n        },\n      });\n    }\n    return this.queryManager;\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => {\n        return this.queryManager\n          ? this.queryManager.clearStore()\n          : Promise.resolve(null);\n      })\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => {\n        return this.queryManager && this.queryManager.reFetchObservableQueries\n          ? this.queryManager.reFetchObservableQueries()\n          : Promise.resolve(null);\n      });\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<void | null> {\n    const { queryManager } = this;\n    return Promise.resolve()\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())))\n      .then(\n        () =>\n          queryManager ? queryManager.clearStore() : Promise.resolve(null),\n      );\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> | Promise<null> {\n    return this.queryManager\n      ? this.queryManager.reFetchObservableQueries(includeStandby)\n      : Promise.resolve(null);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.initProxy().extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.initProxy().restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Initializes a data proxy for this client instance if one does not already\n   * exist and returns either a previously initialized proxy instance or the\n   * newly initialized instance.\n   */\n  private initProxy(): ApolloCache<TCacheShape> {\n    if (!this.proxy) {\n      this.initQueryManager();\n      this.proxy = this.cache;\n    }\n    return this.proxy;\n  }\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n      selectionSet: nestedSelSet || undefined,\n    };\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DocumentNode } from 'graphql';\nimport { getFragmentQueryDocument } from 'apollo-utilities';\n\nimport { DataProxy, Cache } from './types';\nimport { justTypenameQuery, queryFromPojo, fragmentFromPojo } from './utils';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<T, TVariables = any>(\n    query: Cache.ReadOptions<TVariables>,\n  ): T | null;\n  public abstract write<TResult = any, TVariables = any>(\n    write: Cache.WriteOptions<TResult, TVariables>,\n  ): void;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch(watch: Cache.WatchOptions): () => void;\n  public abstract evict<TVariables = any>(\n    query: Cache.EvictOptions<TVariables>,\n  ): Cache.EvictionResult;\n  public abstract reset(): Promise<void>;\n\n  // intializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // optimistic API\n  public abstract removeOptimistic(id: string): void;\n\n  // transactional API\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n  ): void;\n  public abstract recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    id: string,\n  ): void;\n\n  // optional API\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n  // experimental\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType | null {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: Cache.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: options.query,\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: Cache.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      variables: options.variables,\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n    });\n  }\n\n  public writeData<TData = any>({\n    id,\n    data,\n  }: Cache.WriteDataOptions<TData>): void {\n    if (typeof id !== 'undefined') {\n      let typenameResult = null;\n      // Since we can't use fragments without having a typename in the store,\n      // we need to make sure we have one.\n      // To avoid overwriting an existing typename, we need to read it out first\n      // and generate a fake one if none exists.\n      try {\n        typenameResult = this.read<any>({\n          rootId: id,\n          optimistic: false,\n          query: justTypenameQuery,\n        });\n      } catch (e) {\n        // Do nothing, since an error just means no typename exists\n      }\n\n      // tslint:disable-next-line\n      const __typename =\n        (typenameResult && typenameResult.__typename) || '__ClientData';\n\n      // Add a type here to satisfy the inmemory cache\n      const dataToWrite = Object.assign({ __typename }, data);\n\n      this.writeFragment({\n        id,\n        fragment: fragmentFromPojo(dataToWrite, __typename),\n        data: dataToWrite,\n      });\n    } else {\n      this.writeQuery({ query: queryFromPojo(data), data });\n    }\n  }\n}\n","import { DataProxy } from './DataProxy';\n\nexport namespace Cache {\n  export type WatchCallback = (newData: any) => void;\n  export interface EvictionResult {\n    success: Boolean;\n  }\n\n  export interface ReadOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    dataId: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions extends ReadOptions {\n    returnPartialData?: boolean;\n  }\n\n  export interface WatchOptions extends ReadOptions {\n    callback: WatchCallback;\n  }\n\n  export interface EvictOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n","\"use strict\";\n\nfunction Cache(options) {\n  this.map = new Map;\n  this.newest = null;\n  this.oldest = null;\n  this.max = options && options.max;\n  this.dispose = options && options.dispose;\n}\n\nexports.Cache = Cache;\n\nvar Cp = Cache.prototype;\n\nCp.has = function (key) {\n  return this.map.has(key);\n};\n\nCp.get = function (key) {\n  var entry = getEntry(this, key);\n  return entry && entry.value;\n};\n\nfunction getEntry(cache, key) {\n  var entry = cache.map.get(key);\n  if (entry &&\n      entry !== cache.newest) {\n    var older = entry.older;\n    var newer = entry.newer;\n\n    if (newer) {\n      newer.older = older;\n    }\n\n    if (older) {\n      older.newer = newer;\n    }\n\n    entry.older = cache.newest;\n    entry.older.newer = entry;\n\n    entry.newer = null;\n    cache.newest = entry;\n\n    if (entry === cache.oldest) {\n      cache.oldest = newer;\n    }\n  }\n\n  return entry;\n}\n\nCp.set = function (key, value) {\n  var entry = getEntry(this, key);\n  if (entry) {\n    return entry.value = value;\n  }\n\n  entry = {\n    key: key,\n    value: value,\n    newer: null,\n    older: this.newest\n  };\n\n  if (this.newest) {\n    this.newest.newer = entry;\n  }\n\n  this.newest = entry;\n  this.oldest = this.oldest || entry;\n\n  this.map.set(key, entry);\n\n  return entry.value;\n};\n\nCp.clean = function () {\n  if (typeof this.max === \"number\") {\n    while (this.oldest &&\n           this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n};\n\nCp.delete = function (key) {\n  var entry = this.map.get(key);\n  if (entry) {\n    if (entry === this.newest) {\n      this.newest = entry.older;\n    }\n\n    if (entry === this.oldest) {\n      this.oldest = entry.newer;\n    }\n\n    if (entry.newer) {\n      entry.newer.older = entry.older;\n    }\n\n    if (entry.older) {\n      entry.older.newer = entry.newer;\n    }\n\n    this.map.delete(key);\n\n    if (typeof this.dispose === \"function\") {\n      this.dispose(key, entry.value);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","// Although `Symbol` is widely supported these days, we can safely fall\n// back to using a non-enumerable string property without violating any\n// assumptions elsewhere in the implementation.\nvar useSymbol =\n  typeof Symbol === \"function\" &&\n  typeof Symbol.for === \"function\";\n\n// Used to mark `tuple.prototype` so that all objects that inherit from\n// any `tuple.prototype` object (there could be more than one) will test\n// positive according to `tuple.isTuple`.\nvar brand = useSymbol\n  ? Symbol.for(\"immutable-tuple\")\n  : \"@@__IMMUTABLE_TUPLE__@@\";\n\n// Used to save a reference to the globally shared `UniversalWeakMap` that\n// stores all known `tuple` objects.\nvar globalKey = useSymbol\n  ? Symbol.for(\"immutable-tuple-root\")\n  : \"@@__IMMUTABLE_TUPLE_ROOT__@@\";\n\n// Convenient helper for defining hidden immutable properties.\nfunction def(obj, name, value, enumerable) {\n  Object.defineProperty(obj, name, {\n    value: value,\n    enumerable: !! enumerable,\n    writable: false,\n    configurable: false\n  });\n  return value;\n}\n\nvar freeze = Object.freeze || function (obj) {\n  return obj;\n};\n\nfunction isObjRef(value) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) {\n      return false;\n    }\n  case \"function\":\n    return true;\n  default:\n    return false;\n  }\n}\n\n// The `mustConvertThisToArray` value is true when the corresponding\n// `Array` method does not attempt to modify `this`, which means we can\n// pass a `tuple` object as `this` without first converting it to an\n// `Array`.\nfunction forEachArrayMethod(fn) {\n  function call(name, mustConvertThisToArray) {\n    var desc = Object.getOwnPropertyDescriptor(Array.prototype, name);\n    fn(name, desc, !! mustConvertThisToArray);\n  }\n\n  call(\"every\");\n  call(\"filter\");\n  call(\"find\");\n  call(\"findIndex\");\n  call(\"forEach\");\n  call(\"includes\");\n  call(\"indexOf\");\n  call(\"join\");\n  call(\"lastIndexOf\");\n  call(\"map\");\n  call(\"reduce\");\n  call(\"reduceRight\");\n  call(\"slice\");\n  call(\"some\");\n  call(\"toLocaleString\");\n  call(\"toString\");\n\n  // The `reverse` and `sort` methods are usually destructive, but for\n  // `tuple` objects they return a new `tuple` object that has been\n  // appropriately reversed/sorted.\n  call(\"reverse\", true);\n  call(\"sort\", true);\n\n  // Make `[...someTuple]` work.\n  call(useSymbol && Symbol.iterator || \"@@iterator\");\n}\n\n// A map data structure that holds object keys weakly, yet can also hold\n// non-object keys, unlike the native `WeakMap`.\nvar UniversalWeakMap = function UniversalWeakMap() {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  this._weakMap = null;\n  this._strongMap = null;\n  this.data = null;\n};\n\n// Since `get` and `set` are the only methods used, that's all I've\n// implemented here.\n\nUniversalWeakMap.prototype.get = function get (key) {\n  var map = this._getMap(key, false);\n  if (map) {\n    return map.get(key);\n  }\n};\n\nUniversalWeakMap.prototype.set = function set (key, value) {\n  this._getMap(key, true).set(key, value);\n  // An actual `Map` or `WeakMap` would return `this` here, but\n  // returning the `value` is more convenient for the `tuple`\n  // implementation.\n  return value;\n};\n\nUniversalWeakMap.prototype._getMap = function _getMap (key, canCreate) {\n  if (! canCreate) {\n    return isObjRef(key) ? this._weakMap : this._strongMap;\n  }\n  if (isObjRef(key)) {\n    return this._weakMap || (this._weakMap = new WeakMap);\n  }\n  return this._strongMap || (this._strongMap = new Map);\n};\n\n// See [`universal-weak-map.js`](universal-weak-map.html).\n// See [`util.js`](util.html).\n// If this package is installed multiple times, there could be mutiple\n// implementations of the `tuple` function with distinct `tuple.prototype`\n// objects, but the shared pool of `tuple` objects must be the same across\n// all implementations. While it would be ideal to use the `global`\n// object, there's no reliable way to get the global object across all JS\n// environments without using the `Function` constructor, so instead we\n// use the global `Array` constructor as a shared namespace.\nvar root = Array[globalKey] || def(Array, globalKey, new UniversalWeakMap, false);\n\nfunction lookup() {\n  return lookupArray(arguments);\n}\n\nfunction lookupArray(array) {\n  var node = root;\n\n  // Because we are building a tree of *weak* maps, the tree will not\n  // prevent objects in tuples from being garbage collected, since the\n  // tree itself will be pruned over time when the corresponding `tuple`\n  // objects become unreachable. In addition to internalization, this\n  // property is a key advantage of the `immutable-tuple` package.\n  var len = array.length;\n  for (var i = 0; i < len; ++i) {\n    var item = array[i];\n    node = node.get(item) || node.set(item, new UniversalWeakMap);\n  }\n\n  // Return node.data rather than node itself to prevent tampering with\n  // the UniversalWeakMap tree.\n  return node.data || (node.data = Object.create(null));\n}\n\n// See [`lookup.js`](lookup.html).\n// See [`util.js`](util.html).\n// When called with any number of arguments, this function returns an\n// object that inherits from `tuple.prototype` and is guaranteed to be\n// `===` any other `tuple` object that has exactly the same items. In\n// computer science jargon, `tuple` instances are \"internalized\" or just\n// \"interned,\" which allows for constant-time equality checking, and makes\n// it possible for tuple objects to be used as `Map` or `WeakMap` keys, or\n// stored in a `Set`.\nfunction tuple() {\n  var arguments$1 = arguments;\n\n  var node = lookup.apply(null, arguments);\n\n  if (node.tuple) {\n    return node.tuple;\n  }\n\n  var t = Object.create(tuple.prototype);\n\n  // Define immutable items with numeric indexes, and permanently fix the\n  // `.length` property.\n  var argc = arguments.length;\n  for (var i = 0; i < argc; ++i) {\n    t[i] = arguments$1[i];\n  }\n\n  def(t, \"length\", argc, false);\n\n  // Remember this new `tuple` object so that we can return the same object\n  // earlier next time.\n  return freeze(node.tuple = t);\n}\n\n// Since the `immutable-tuple` package could be installed multiple times\n// in an application, there is no guarantee that the `tuple` constructor\n// or `tuple.prototype` will be unique, so `value instanceof tuple` is\n// unreliable. Instead, to test if a value is a tuple, you should use\n// `tuple.isTuple(value)`.\ndef(tuple.prototype, brand, true, false);\nfunction isTuple(that) {\n  return !! (that && that[brand] === true);\n}\n\ntuple.isTuple = isTuple;\n\nfunction toArray(tuple) {\n  var array = [];\n  var i = tuple.length;\n  while (i--) { array[i] = tuple[i]; }\n  return array;\n}\n\n// Copy all generic non-destructive Array methods to `tuple.prototype`.\n// This works because (for example) `Array.prototype.slice` can be invoked\n// against any `Array`-like object.\nforEachArrayMethod(function (name, desc, mustConvertThisToArray) {\n  var method = desc && desc.value;\n  if (typeof method === \"function\") {\n    desc.value = function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var result = method.apply(\n        mustConvertThisToArray ? toArray(this) : this,\n        args\n      );\n      // Of course, `tuple.prototype.slice` should return a `tuple` object,\n      // not a new `Array`.\n      return Array.isArray(result) ? tuple.apply(void 0, result) : result;\n    };\n    Object.defineProperty(tuple.prototype, name, desc);\n  }\n});\n\n// Like `Array.prototype.concat`, except for the extra effort required to\n// convert any tuple arguments to arrays, so that\n// ```\n// tuple(1).concat(tuple(2), 3) === tuple(1, 2, 3)\n// ```\nvar ref = Array.prototype;\nvar concat = ref.concat;\ntuple.prototype.concat = function () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return tuple.apply(void 0, concat.apply(toArray(this), args.map(\n    function (item) { return isTuple(item) ? toArray(item) : item; }\n  )));\n};\n\nexport default tuple;\nexport { tuple, lookup, lookupArray };\n","\"use strict\";\n\nvar fakeNullFiber = new (function Fiber(){});\nvar localKey = \"_optimism_local\";\n\nfunction getCurrentFiber() {\n  return fakeNullFiber;\n}\n\nif (typeof module === \"object\") {\n  try {\n    var Fiber = module[\"eriuqer\".split(\"\").reverse().join(\"\")](\"fibers\");\n    // If we were able to require fibers, redefine the getCurrentFiber\n    // function so that it has a chance to return Fiber.current.\n    getCurrentFiber = function () {\n      return Fiber.current || fakeNullFiber;\n    };\n  } catch (e) {}\n}\n\n// Returns an object unique to Fiber.current, if fibers are enabled.\n// This object is used for Fiber-local storage in ./entry.js.\nexports.get = function () {\n  var fiber = getCurrentFiber();\n  return fiber[localKey] || (fiber[localKey] = Object.create(null));\n};\n","\"use strict\";\n\nvar getLocal = require(\"./local.js\").get;\nvar UNKNOWN_VALUE = Object.create(null);\nvar emptySetPool = [];\nvar entryPool = [];\n\n// Don't let the emptySetPool or entryPool grow larger than this size,\n// since unconstrained pool growth could lead to memory leaks.\nexports.POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition, optionalMessage) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\nfunction Entry(fn, key, args) {\n  this.parents = new Set;\n  this.childValues = new Map;\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  this.dirtyChildren = null;\n\n  reset(this, fn, key, args);\n\n  ++Entry.count;\n}\n\nEntry.count = 0;\n\nfunction reset(entry, fn, key, args) {\n  entry.fn = fn;\n  entry.key = key;\n  entry.args = args;\n  entry.value = UNKNOWN_VALUE;\n  entry.dirty = true;\n  entry.subscribe = null;\n  entry.unsubscribe = null;\n  entry.recomputing = false;\n  // Optional callback that will be invoked when entry.parents becomes\n  // empty. The Entry object is given as the first parameter. If the\n  // callback returns true, then this entry can be removed from the graph\n  // and safely recycled into the entryPool.\n  entry.reportOrphan = null;\n}\n\nEntry.acquire = function (fn, key, args) {\n  var entry = entryPool.pop();\n  if (entry) {\n    reset(entry, fn, key, args);\n    return entry;\n  }\n  return new Entry(fn, key, args);\n};\n\nfunction release(entry) {\n  assert(entry.parents.size === 0);\n  assert(entry.childValues.size === 0);\n  assert(entry.dirtyChildren === null);\n  if (entryPool.length < exports.POOL_TARGET_SIZE) {\n    entryPool.push(entry);\n  }\n}\n\nexports.Entry = Entry;\n\nvar Ep = Entry.prototype;\n\n// The public API of Entry objects consists of the Entry constructor,\n// along with the recompute, setDirty, and dispose methods.\n\nEp.recompute = function recompute() {\n  if (! rememberParent(this) &&\n      maybeReportOrphan(this)) {\n    // The recipient of the entry.reportOrphan callback decided to dispose\n    // of this orphan entry by calling entry.dispos(), which recycles it\n    // into the entryPool, so we don't need to (and should not) proceed\n    // with the recomputation.\n    return;\n  }\n\n  return recomputeIfDirty(this);\n};\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry) {\n  var report = entry.reportOrphan;\n  return typeof report === \"function\" &&\n    entry.parents.size === 0 &&\n    report(entry) === true;\n}\n\nEp.setDirty = function setDirty() {\n  if (this.dirty) return;\n  this.dirty = true;\n  this.value = UNKNOWN_VALUE;\n  reportDirty(this);\n  // We can go ahead and unsubscribe here, since any further dirty\n  // notifications we receive will be redundant, and unsubscribing may\n  // free up some resources, e.g. file watchers.\n  unsubscribe(this);\n};\n\nEp.dispose = function dispose() {\n  var entry = this;\n  forgetChildren(entry).forEach(maybeReportOrphan);\n  unsubscribe(entry);\n\n  // Because this entry has been kicked out of the cache (in index.js),\n  // we've lost the ability to find out if/when this entry becomes dirty,\n  // whether that happens through a subscription, because of a direct call\n  // to entry.setDirty(), or because one of its children becomes dirty.\n  // Because of this loss of future information, we have to assume the\n  // worst (that this entry might have become dirty very soon), so we must\n  // immediately mark this entry's parents as dirty. Normally we could\n  // just call entry.setDirty() rather than calling parent.setDirty() for\n  // each parent, but that would leave this entry in parent.childValues\n  // and parent.dirtyChildren, which would prevent the child from being\n  // truly forgotten.\n  entry.parents.forEach(function (parent) {\n    parent.setDirty();\n    forgetChild(parent, entry);\n  });\n\n  // Since this entry has no parents and no children anymore, and the\n  // caller of Entry#dispose has indicated that entry.value no longer\n  // matters, we can safely recycle this Entry object for later use.\n  release(entry);\n};\n\nfunction setClean(entry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(entry) {\n  entry.parents.forEach(function (parent) {\n    reportDirtyChild(parent, entry);\n  });\n}\n\nfunction reportClean(entry) {\n  entry.parents.forEach(function (parent) {\n    reportCleanChild(parent, entry);\n  });\n}\n\nfunction mightBeDirty(entry) {\n  return entry.dirty ||\n    (entry.dirtyChildren &&\n     entry.dirtyChildren.size);\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(entry, child) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(entry.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! entry.dirtyChildren) {\n    entry.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (entry.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  entry.dirtyChildren.add(child);\n  reportDirty(entry);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(entry, child) {\n  var cv = entry.childValues;\n\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(cv.has(child));\n  assert(! mightBeDirty(child));\n\n  var childValue = cv.get(child);\n  if (childValue === UNKNOWN_VALUE) {\n    cv.set(child, child.value);\n  } else if (childValue !== child.value) {\n    entry.setDirty();\n  }\n\n  removeDirtyChild(entry, child);\n\n  if (mightBeDirty(entry)) {\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction removeDirtyChild(entry, child) {\n  var dc = entry.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < exports.POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      entry.dirtyChildren = null;\n    }\n  }\n}\n\nfunction rememberParent(entry) {\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  if (parent) {\n    entry.parents.add(parent);\n\n    if (! parent.childValues.has(entry)) {\n      parent.childValues.set(entry, UNKNOWN_VALUE);\n    }\n\n    if (mightBeDirty(entry)) {\n      reportDirtyChild(parent, entry);\n    } else {\n      reportCleanChild(parent, entry);\n    }\n\n    return parent;\n  }\n}\n\n// This is the most important method of the Entry API, because it\n// determines whether the cached entry.value can be returned immediately,\n// or must be recomputed. The overall performance of the caching system\n// depends on the truth of the following observations: (1) this.dirty is\n// usually false, (2) this.dirtyChildren is usually null/empty, and thus\n// (3) this.value is usally returned very quickly, without recomputation.\nfunction recomputeIfDirty(entry) {\n  if (entry.dirty) {\n    // If this Entry is explicitly dirty because someone called\n    // entry.setDirty(), recompute.\n    return reallyRecompute(entry);\n  }\n\n  if (mightBeDirty(entry)) {\n    // Get fresh values for any dirty children, and if those values\n    // disagree with this.childValues, mark this Entry explicitly dirty.\n    entry.dirtyChildren.forEach(function (child) {\n      assert(entry.childValues.has(child));\n      try {\n        recomputeIfDirty(child);\n      } catch (e) {\n        entry.setDirty();\n      }\n    });\n\n    if (entry.dirty) {\n      // If this Entry has become explicitly dirty after comparing the fresh\n      // values of its dirty children against this.childValues, recompute.\n      return reallyRecompute(entry);\n    }\n  }\n\n  assert(entry.value !== UNKNOWN_VALUE);\n\n  return entry.value;\n}\n\nfunction reallyRecompute(entry) {\n  assert(! entry.recomputing, \"already recomputing\");\n  entry.recomputing = true;\n\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  var originalChildren = forgetChildren(entry);\n\n  var local = getLocal();\n  var parent = local.currentParentEntry;\n  local.currentParentEntry = entry;\n\n  var threw = true;\n  try {\n    entry.value = entry.fn.apply(null, entry.args);\n    threw = false;\n\n  } finally {\n    entry.recomputing = false;\n\n    assert(local.currentParentEntry === entry);\n    local.currentParentEntry = parent;\n\n    if (threw || ! subscribe(entry)) {\n      // Mark this Entry dirty if entry.fn threw or we failed to\n      // resubscribe. This is important because, if we have a subscribe\n      // function and it failed, then we're going to miss important\n      // notifications about the potential dirtiness of entry.value.\n      entry.setDirty();\n    } else {\n      // If we successfully recomputed entry.value and did not fail to\n      // (re)subscribe, then this Entry is no longer explicitly dirty.\n      setClean(entry);\n    }\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return entry.value;\n}\n\nvar reusableEmptyArray = [];\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(entry) {\n  var children = reusableEmptyArray;\n\n  if (entry.childValues.size > 0) {\n    children = [];\n    entry.childValues.forEach(function (value, child) {\n      forgetChild(entry, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefor must have been reset to null.\n  assert(entry.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(entry, child) {\n  child.parents.delete(entry);\n  entry.childValues.delete(child);\n  removeDirtyChild(entry, child);\n}\n\nfunction subscribe(entry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      unsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction unsubscribe(entry) {\n  var unsub = entry.unsubscribe;\n  if (typeof unsub === \"function\") {\n    entry.unsubscribe = null;\n    unsub();\n  }\n}\n","\"use strict\";\n\nvar Cache = require(\"./cache.js\").Cache;\nvar tuple = require(\"immutable-tuple\").tuple;\nvar Entry = require(\"./entry.js\").Entry;\nvar getLocal = require(\"./local.js\").get;\n\n// Exported so that custom makeCacheKey functions can easily reuse the\n// default implementation (with different arguments).\nexports.defaultMakeCacheKey = tuple;\n\nfunction normalizeOptions(options) {\n  options = options || Object.create(null);\n\n  if (typeof options.makeCacheKey !== \"function\") {\n    options.makeCacheKey = tuple;\n  }\n\n  if (typeof options.max !== \"number\") {\n    options.max = Math.pow(2, 16);\n  }\n\n  return options;\n}\n\nfunction wrap(fn, options) {\n  options = normalizeOptions(options);\n\n  // If this wrapped function is disposable, then its creator does not\n  // care about its return value, and it should be removed from the cache\n  // immediately when it no longer has any parents that depend on it.\n  var disposable = !! options.disposable;\n\n  var cache = new Cache({\n    max: options.max,\n    dispose: function (key, entry) {\n      entry.dispose();\n    }\n  });\n\n  function reportOrphan(entry) {\n    if (disposable) {\n      // Triggers the entry.dispose() call above.\n      cache.delete(entry.key);\n      return true;\n    }\n  }\n\n  function optimistic() {\n    if (disposable && ! getLocal().currentParentEntry) {\n      // If there's no current parent computation, and this wrapped\n      // function is disposable (meaning we don't care about entry.value,\n      // just dependency tracking), then we can short-cut everything else\n      // in this function, because entry.recompute() is going to recycle\n      // the entry object without recomputing anything, anyway.\n      return;\n    }\n\n    var key = options.makeCacheKey.apply(null, arguments);\n    if (! key) {\n      return fn.apply(null, arguments);\n    }\n\n    var args = [], len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var entry = cache.get(key);\n    if (entry) {\n      entry.args = args;\n    } else {\n      cache.set(key, entry = Entry.acquire(fn, key, args));\n      entry.subscribe = options.subscribe;\n      if (disposable) {\n        entry.reportOrphan = reportOrphan;\n      }\n    }\n\n    var value = entry.recompute();\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    // Clean up any excess entries in the cache, but only if this entry\n    // has no parents, which means we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (entry.parents.size === 0) {\n      cache.clean();\n    }\n\n    // If options.disposable is truthy, the caller of wrap is telling us\n    // they don't care about the result of entry.recompute(), so we should\n    // avoid returning the value, so it won't be accidentally used.\n    if (! disposable) {\n      return value;\n    }\n  }\n\n  optimistic.dirty = function () {\n    var key = options.makeCacheKey.apply(null, arguments);\n    if (! key) {\n      return;\n    }\n\n    if (! cache.has(key)) {\n      return;\n    }\n\n    cache.get(key).setDirty();\n  };\n\n  return optimistic;\n}\n\nexports.wrap = wrap;\n","// Make sure Map.prototype.set returns the Map instance, per spec.\n// https://github.com/apollographql/apollo-client/issues/4024\nconst testMap = new Map();\nif (testMap.set(1, 2) !== testMap) {\n  const { set } = testMap;\n  Map.prototype.set = function (...args) {\n    set.apply(this, args);\n    return this;\n  };\n}\n\n// Make sure Set.prototype.add returns the Set instance, per spec.\nconst testSet = new Set();\nif (testSet.add(3) !== testSet) {\n  const { add } = testSet;\n  Set.prototype.add = function (...args) {\n    add.apply(this, args);\n    return this;\n  };\n}\n\nconst frozen = {};\nif (typeof Object.freeze === 'function') {\n  Object.freeze(frozen);\n}\n\ntry {\n  // If non-extensible objects can't be stored as keys in a Map, make sure we\n  // do not freeze/seal/etc. an object without first attempting to put it in a\n  // Map. For example, this gives the React Native Map polyfill a chance to tag\n  // objects before they become non-extensible:\n  // https://github.com/facebook/react-native/blob/98a6f19d7c/Libraries/vendor/core/Map.js#L44-L50\n  // https://github.com/apollographql/react-apollo/issues/2442#issuecomment-426489517\n  testMap.set(frozen, frozen).delete(frozen);\n} catch {\n  const wrap = (method: <T>(obj: T) => T): typeof method => {\n    return method && (obj => {\n      try {\n        // If .set succeeds, also call .delete to avoid leaking memory.\n        testMap.set(obj, obj).delete(obj);\n      } finally {\n        // If .set or .delete fails, the exception will be silently swallowed\n        // by this return-from-finally statement:\n        return method.call(Object, obj);\n      }\n    });\n  };\n  Object.freeze = wrap(Object.freeze);\n  Object.seal = wrap(Object.seal);\n  Object.preventExtensions = wrap(Object.preventExtensions);\n}\n","import { isTest, IdValue } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\nfunction shouldWarn() {\n  const answer = !haveWarned;\n  /* istanbul ignore if */\n  if (!isTest()) {\n    haveWarned = true;\n  }\n  return answer;\n}\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean | 'heuristic' {\n    const obj = context.store.get(idValue.id);\n\n    if (!obj && idValue.id === 'ROOT_QUERY') {\n      return true;\n    }\n\n    if (!obj) {\n      return false;\n    }\n\n    if (!obj.__typename) {\n      if (shouldWarn()) {\n        invariant.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        invariant.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        invariant.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n      }\n\n      return 'heuristic';\n    }\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    // XXX here we reach an issue - we don't know if this fragment should match or not. It's either:\n    // 1. A fragment on a non-matching concrete type or interface or union\n    // 2. A fragment on a matching interface or union\n    // If it's 1, we don't want to return anything, if it's 2 we want to match. We can't tell the\n    // difference, so we warn the user, but still try to match it (backcompat).\n    if (shouldWarn()) {\n      invariant.error(\n        'You are using the simple (heuristic) fragment matcher, but your ' +\n          'queries contain union or interface types. Apollo Client will not be ' +\n          'able to accurately map fragments. To make this error go away, use ' +\n          'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n          'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher',\n      );\n    }\n\n    return 'heuristic';\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    invariant(\n      this.isReady,\n      'FragmentMatcher.match() was called before FragmentMatcher.init()',\n    );\n\n    const obj = context.store.get(idValue.id);\n\n    if (!obj) {\n      return false;\n    }\n\n    invariant(\n      obj.__typename,\n      `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n        obj,\n      )}`,\n    );\n\n    if (obj.__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","export class CacheKeyNode<KeyType = object> {\n  private children: Map<any, CacheKeyNode<KeyType>> | null = null;\n  private key: KeyType | null = null;\n\n  lookup(...args: any[]): KeyType {\n    return this.lookupArray(args);\n  }\n\n  lookupArray(array: any[]): KeyType {\n    let node: CacheKeyNode<KeyType> = this;\n    array.forEach(value => {\n      node = node.getOrCreate(value);\n    });\n    return node.key || (node.key = Object.create(null));\n  }\n\n  getOrCreate(value: any): CacheKeyNode<KeyType> {\n    const map = this.children || (this.children = new Map());\n    let node = map.get(value);\n    if (!node) {\n      map.set(value, (node = new CacheKeyNode<KeyType>()));\n    }\n    return node;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class DepTrackingCache implements NormalizedCache {\n  // Wrapper function produced by the optimism library, used to depend on\n  // dataId strings, for easy invalidation of specific IDs.\n  private depend: OptimisticWrapperFunction<(dataId: string) => StoreObject>;\n\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {\n    this.depend = wrap((\n      dataId: string,\n    ) => this.data[dataId], {\n      disposable: true,\n      makeCacheKey(dataId: string) {\n        return dataId;\n      }\n    });\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n\n  public get(dataId: string): StoreObject {\n    this.depend(dataId);\n    return this.data[dataId];\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    const oldValue = this.data[dataId];\n    if (value !== oldValue) {\n      this.data[dataId] = value;\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public delete(dataId: string): void {\n    if (hasOwn.call(this.data, dataId)) {\n      delete this.data[dataId];\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public replace(newData: NormalizedCacheObject): void {\n    if (newData) {\n      Object.keys(newData).forEach(dataId => {\n        this.set(dataId, newData[dataId]);\n      });\n      Object.keys(this.data).forEach(dataId => {\n        if (! hasOwn.call(newData, dataId)) {\n          this.delete(dataId);\n        }\n      });\n    } else {\n      Object.keys(this.data).forEach(dataId => {\n        this.delete(dataId);\n      });\n    }\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new DepTrackingCache(seed);\n}\n","import {\n  assign,\n  getDefaultValues,\n  getQueryDefinition,\n  isEqual,\n  DirectiveInfo,\n  FragmentMap,\n  IdValue,\n  StoreValue,\n  argumentsObjectFromField,\n  createFragmentMap,\n  getDirectiveInfoFromField,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getStoreKeyName,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isJsonValue,\n  resultKeyNameFromField,\n  shouldInclude,\n  toIdValue,\n  mergeDeepArray,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  ReadQueryOptions,\n  StoreObject,\n} from './types';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionSetNode,\n} from 'graphql';\n\nimport { wrap } from 'optimism';\nimport { CacheKeyNode } from './cacheKeys';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: ReadStoreContext,\n) => boolean | 'heuristic';\n\ntype ExecContext = {\n  query: DocumentNode;\n  fragmentMap: FragmentMap;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n};\n\ntype ExecInfo = {\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecResultMissingField = {\n  object: StoreObject;\n  fieldName: string;\n  tolerable: boolean;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  // Empty array if no missing fields encountered while computing result.\n  missing?: ExecResultMissingField[];\n};\n\ntype ExecStoreQueryOptions = {\n  query: DocumentNode;\n  rootValue: IdValue;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  // Default matcher always matches all fragments\n  fragmentMatcher: FragmentMatcher;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  rootValue: any;\n  execContext: ExecContext;\n};\n\nexport class StoreReader {\n  constructor(\n    private cacheKeyRoot = new CacheKeyNode,\n  ) {\n    const reader = this;\n    const {\n      executeStoreQuery,\n      executeSelectionSet,\n    } = reader;\n\n    this.executeStoreQuery = wrap((options: ExecStoreQueryOptions) => {\n      return executeStoreQuery.call(this, options);\n    }, {\n      makeCacheKey({\n        query,\n        rootValue,\n        contextValue,\n        variableValues,\n        fragmentMatcher,\n      }: ExecStoreQueryOptions) {\n        // The result of executeStoreQuery can be safely cached only if the\n        // underlying store is capable of tracking dependencies and invalidating\n        // the cache when relevant data have changed.\n        if (contextValue.store instanceof DepTrackingCache) {\n          return reader.cacheKeyRoot.lookup(\n            query,\n            contextValue.store,\n            fragmentMatcher,\n            JSON.stringify(variableValues),\n            rootValue.id,\n          );\n        }\n        return;\n      }\n    });\n\n    this.executeSelectionSet = wrap((options: ExecSelectionSetOptions) => {\n      return executeSelectionSet.call(this, options);\n    }, {\n      makeCacheKey({\n        selectionSet,\n        rootValue,\n        execContext,\n      }: ExecSelectionSetOptions) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return reader.cacheKeyRoot.lookup(\n            selectionSet,\n            execContext.contextValue.store,\n            execContext.fragmentMatcher,\n            JSON.stringify(execContext.variableValues),\n            rootValue.id,\n          );\n        }\n        return;\n      }\n    });\n  }\n\n  /**\n   * Resolves the result of a query solely from the store (i.e. never hits the server).\n   *\n   * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n   * store.\n   *\n   * @param {DocumentNode} query The query document to resolve from the data available in the store.\n   *\n   * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n   * be referenced by the query document.\n   *\n   * @param {any} previousResult The previous result returned by this function for the same query.\n   * If nothing in the store changed since that previous result then values from the previous result\n   * will be returned to preserve referential equality.\n   */\n  public readQueryFromStore<QueryType>(\n    options: ReadQueryOptions,\n  ): QueryType {\n    const optsPatch = { returnPartialData: false };\n\n    return this.diffQueryAgainstStore<QueryType>({\n      ...options,\n      ...optsPatch,\n    }).result;\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @param  {any} previousResult The previous result returned by this function for the same query\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    variables,\n    previousResult,\n    returnPartialData = true,\n    rootId = 'ROOT_QUERY',\n    fragmentMatcherFunction,\n    config,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    // Throw the right validation error by trying to find a query in the document\n    const queryDefinition = getQueryDefinition(query);\n\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n    const context: ReadStoreContext = {\n      // Global settings\n      store,\n      dataIdFromObject: (config && config.dataIdFromObject) || null,\n      cacheRedirects: (config && config.cacheRedirects) || {},\n    };\n\n    const execResult = this.executeStoreQuery({\n      query,\n      rootValue: {\n        type: 'id',\n        id: rootId,\n        generated: true,\n        typename: 'Query',\n      },\n      contextValue: context,\n      variableValues: variables,\n      fragmentMatcher: fragmentMatcherFunction,\n    });\n\n    const hasMissingFields =\n      execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && ! returnPartialData) {\n      execResult.missing.forEach(info => {\n        if (info.tolerable) return;\n        throw new InvariantError(\n          `Can't find field ${info.fieldName} on object ${JSON.stringify(\n            info.object,\n            null,\n            2,\n          )}.`,\n        );\n      });\n    }\n\n    if (previousResult) {\n      if (isEqual(previousResult, execResult.result)) {\n        execResult.result = previousResult;\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !hasMissingFields,\n    };\n  }\n\n  /**\n   * Based on graphql function from graphql-js:\n   *\n   * graphql(\n   *   schema: GraphQLSchema,\n   *   requestString: string,\n   *   rootValue?: ?any,\n   *   contextValue?: ?any,\n   *   variableValues?: ?{[key: string]: any},\n   *   operationName?: ?string\n   * ): Promise<GraphQLResult>\n   *\n   * The default export as of graphql-anywhere is sync as of 4.0,\n   * but below is an exported alternative that is async.\n   * In the 5.0 version, this will be the only export again\n   * and it will be async\n   *\n   */\n  private executeStoreQuery({\n    query,\n    rootValue,\n    contextValue,\n    variableValues,\n    // Default matcher always matches all fragments\n    fragmentMatcher = defaultFragmentMatcher,\n  }: ExecStoreQueryOptions): ExecResult {\n    const mainDefinition = getMainDefinition(query);\n    const fragments = getFragmentDefinitions(query);\n    const fragmentMap = createFragmentMap(fragments);\n    const execContext: ExecContext = {\n      query,\n      fragmentMap,\n      contextValue,\n      variableValues,\n      fragmentMatcher,\n    };\n\n    return this.executeSelectionSet({\n      selectionSet: mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    });\n  }\n\n  private executeSelectionSet({\n    selectionSet,\n    rootValue,\n    execContext,\n  }: ExecSelectionSetOptions): ExecResult {\n    const { fragmentMap, contextValue, variableValues: variables } = execContext;\n    const finalResult: ExecResult = { result: null };\n\n    const objectsToMerge: { [key: string]: any }[] = [];\n\n    const object: StoreObject = contextValue.store.get(rootValue.id);\n\n    const typename =\n      (object && object.__typename) ||\n      (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n      void 0;\n\n    function handleMissing<T>(result: ExecResult<T>): T {\n      if (result.missing) {\n        finalResult.missing = finalResult.missing || [];\n        finalResult.missing.push(...result.missing);\n      }\n      return result.result;\n    }\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely\n        return;\n      }\n\n      if (isField(selection)) {\n        const fieldResult = handleMissing(\n          this.executeField(object, typename, selection, execContext),\n        );\n\n        if (typeof fieldResult !== 'undefined') {\n          objectsToMerge.push({\n            [resultKeyNameFromField(selection)]: fieldResult,\n          });\n        }\n\n      } else {\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // This is a named fragment\n          fragment = fragmentMap[selection.name.value];\n\n          if (!fragment) {\n            throw new InvariantError(`No fragment named ${selection.name.value}`);\n          }\n        }\n\n        const typeCondition = fragment.typeCondition.name.value;\n\n        const match = execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n        if (match) {\n          let fragmentExecResult = this.executeSelectionSet({\n            selectionSet: fragment.selectionSet,\n            rootValue,\n            execContext,\n          });\n\n          if (match === 'heuristic' && fragmentExecResult.missing) {\n            fragmentExecResult = {\n              ...fragmentExecResult,\n              missing: fragmentExecResult.missing.map(info => {\n                return { ...info, tolerable: true };\n              }),\n            };\n          }\n\n          objectsToMerge.push(handleMissing(fragmentExecResult));\n        }\n      }\n    });\n\n    // Perform a single merge at the end so that we can avoid making more\n    // defensive shallow copies than necessary.\n    finalResult.result = mergeDeepArray(objectsToMerge);\n\n    return finalResult;\n  }\n\n  private executeField(\n    object: StoreObject,\n    typename: string | void,\n    field: FieldNode,\n    execContext: ExecContext,\n  ): ExecResult {\n    const { variableValues: variables, contextValue } = execContext;\n    const fieldName = field.name.value;\n    const args = argumentsObjectFromField(field, variables);\n\n    const info: ExecInfo = {\n      resultKey: resultKeyNameFromField(field),\n      directives: getDirectiveInfoFromField(field, variables),\n    };\n\n    const readStoreResult = readStoreResolver(\n      object,\n      typename,\n      fieldName,\n      args,\n      contextValue,\n      info,\n    );\n\n    if (Array.isArray(readStoreResult.result)) {\n      return this.combineExecResults(\n        readStoreResult,\n        this.executeSubSelectedArray(\n          field,\n          readStoreResult.result,\n          execContext,\n        ),\n      );\n    }\n\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n      assertSelectionSetForIdValue(field, readStoreResult.result);\n      return readStoreResult;\n    }\n\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (readStoreResult.result == null) {\n      // Basically any field in a GraphQL response can be null, or missing\n      return readStoreResult;\n    }\n\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return this.combineExecResults(\n      readStoreResult,\n      this.executeSelectionSet({\n        selectionSet: field.selectionSet,\n        rootValue: readStoreResult.result,\n        execContext,\n      }),\n    );\n  }\n\n  private combineExecResults<T>(\n    ...execResults: ExecResult<T>[]\n  ): ExecResult<T> {\n    let missing: ExecResultMissingField[] = null;\n    execResults.forEach(execResult => {\n      if (execResult.missing) {\n        missing = missing || [];\n        missing.push(...execResult.missing);\n      }\n    });\n    return {\n      result: execResults.pop().result,\n      missing,\n    };\n  }\n\n  private executeSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): ExecResult {\n    let missing: ExecResultMissingField[] = null;\n\n    function handleMissing<T>(childResult: ExecResult<T>): T {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push(...childResult.missing);\n      }\n\n      return childResult.result;\n    }\n\n    result = result.map(item => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (Array.isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray(field, item, execContext));\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          rootValue: item,\n          execContext,\n        }));\n      }\n\n      assertSelectionSetForIdValue(field, item);\n\n      return item;\n    });\n\n    return { result, missing };\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  field: FieldNode,\n  value: any,\n) {\n  if (!field.selectionSet && isIdValue(value)) {\n    throw new InvariantError(\n      `Missing selection set for object of type ${\n        value.typename\n      } returned for query field ${field.name.value}`\n    );\n  }\n}\n\nfunction defaultFragmentMatcher() {\n  return true;\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  invariant(isIdValue(idValue), `\\\nEncountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n}\n\nfunction readStoreResolver(\n  object: StoreObject,\n  typename: string | void,\n  fieldName: string,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n): ExecResult<StoreValue> {\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | void = void 0;\n\n  if (object) {\n    fieldValue = object[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      typeof typename === 'string'\n    ) {\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(object, args, {\n            getCacheKey(storeObj: StoreObject) {\n              return toIdValue({\n                id: context.dataIdFromObject(storeObj),\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    return {\n      result: fieldValue,\n      missing: [{\n        object,\n        fieldName: storeKeyName,\n        tolerable: false,\n      }],\n    };\n  }\n\n  if (isJsonValue(fieldValue)) {\n    fieldValue = fieldValue.json;\n  }\n\n  return {\n    result: fieldValue,\n  };\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(protected data: NormalizedCacheObject = Object.create(null)) {}\n\n  public toObject() {\n    return this.data;\n  }\n  public get(dataId: string) {\n    return this.data[dataId];\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n\n  public delete(dataId: string) {\n    this.data[dataId] = void 0;\n  }\n\n  public clear() {\n    this.data = Object.create(null);\n  }\n\n  public replace(newData: NormalizedCacheObject) {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { FragmentMatcher } from './readFromStore';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  StoreValue,\n  toIdValue,\n  isEqual,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport { ObjectCache } from './objectCache';\nimport { defaultNormalizedCacheFactory } from './depTrackingCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${JSON.stringify(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\nexport type WriteContext = {\n  readonly store: NormalizedCache;\n  readonly processedData?: { [x: string]: FieldNode[] };\n  readonly variables?: any;\n  readonly dataIdFromObject?: IdGetter;\n  readonly fragmentMap?: FragmentMap;\n  readonly fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport class StoreWriter {\n  /**\n   * Writes the result of a query to the store.\n   *\n   * @param result The result object returned for the query document.\n   *\n   * @param query The query document whose result we are writing to the store.\n   *\n   * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n   *\n   * @param variables A map from the name of a variable to its value. These variables can be\n   * referenced by the query document.\n   *\n   * @param dataIdFromObject A function that returns an object identifier given a particular result\n   * object. See the store documentation for details and an example of this function.\n   *\n   * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n   */\n  public writeQueryToStore({\n    query,\n    result,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    query: DocumentNode;\n    result: Object;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    return this.writeResultToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      document: query,\n      store,\n      variables,\n      dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n  }\n\n  public writeResultToStore({\n    dataId,\n    result,\n    document,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    dataId: string;\n    result: any;\n    document: DocumentNode;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    const operationDefinition = getOperationDefinition(document);\n\n    try {\n      return this.writeSelectionSetToStore({\n        result,\n        dataId,\n        selectionSet: operationDefinition.selectionSet,\n        context: {\n          store,\n          processedData: {},\n          variables: assign(\n            {},\n            getDefaultValues(operationDefinition),\n            variables,\n          ),\n          dataIdFromObject,\n          fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n          fragmentMatcherFunction,\n        },\n      });\n    } catch (e) {\n      throw enhanceErrorWithDocument(e, document);\n    }\n  }\n\n  public writeSelectionSetToStore({\n    result,\n    dataId,\n    selectionSet,\n    context,\n  }: {\n    dataId: string;\n    result: any;\n    selectionSet: SelectionSetNode;\n    context: WriteContext;\n  }): NormalizedCache {\n    const { variables, store, fragmentMap } = context;\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        return;\n      }\n\n      if (isField(selection)) {\n        const resultFieldKey: string = resultKeyNameFromField(selection);\n        const value: any = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          this.writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          let isDefered = false;\n          let isClient = false;\n          if (selection.directives && selection.directives.length) {\n            // If this is a defered field we don't need to throw / warn.\n            isDefered = selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n            // When using the @client directive, it might be desirable in\n            // some cases to want to write a selection set to the store,\n            // without having all of the selection set values available.\n            // This is because the @client field values might have already\n            // been written to the cache separately (e.g. via Apollo\n            // Cache's `writeData` capabilities). Because of this, we'll\n            // skip the missing field warning for fields with @client\n            // directives.\n            isClient = selection.directives.some(\n              directive => directive.name && directive.name.value === 'client',\n            );\n          }\n\n          if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            invariant.warn(\n              `Missing field ${resultFieldKey} in ${JSON.stringify(\n                result,\n                null,\n                2,\n              ).substring(0, 100)}`,\n            );\n          }\n        }\n      } else {\n        // This is not a field, so it must be a fragment, either inline or named\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // Named fragment\n          fragment = (fragmentMap || {})[selection.name.value];\n          invariant(fragment, `No fragment named ${selection.name.value}.`);\n        }\n\n        let matches = true;\n        if (context.fragmentMatcherFunction && fragment.typeCondition) {\n          // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n          // Right now we have to pretend that we're passing in an idValue and that there's a store\n          // on the context.\n          const idValue = toIdValue({ id: 'self', typename: undefined });\n          const fakeContext: ReadStoreContext = {\n            // NOTE: fakeContext always uses ObjectCache\n            // since this is only to ensure the return value of 'matches'\n            store: new ObjectCache({ self: result }),\n            cacheRedirects: {},\n          };\n          const match = context.fragmentMatcherFunction(\n            idValue,\n            fragment.typeCondition.name.value,\n            fakeContext,\n          );\n          if (!isProduction() && match === 'heuristic') {\n            invariant.error('WARNING: heuristic fragment matching going on!');\n          }\n          matches = !!match;\n        }\n\n        if (matches) {\n          this.writeSelectionSetToStore({\n            result,\n            selectionSet: fragment.selectionSet,\n            dataId,\n            context,\n          });\n        }\n      }\n    });\n\n    return store;\n  }\n\n  private writeFieldToStore({\n    field,\n    value,\n    dataId,\n    context,\n  }: {\n    field: FieldNode;\n    value: any;\n    dataId: string;\n    context: WriteContext;\n  }) {\n    const { variables, dataIdFromObject, store } = context;\n\n    let storeValue: StoreValue;\n    let storeObject: StoreObject;\n\n    const storeFieldName: string = storeKeyNameFromField(field, variables);\n\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n      storeValue =\n        value != null && typeof value === 'object'\n          ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n            // an id.\n            { type: 'json', json: value }\n          : // Otherwise, just store the scalar directly in the store.\n            value;\n    } else if (Array.isArray(value)) {\n      const generatedId = `${dataId}.${storeFieldName}`;\n\n      storeValue = this.processArrayValue(\n        value,\n        generatedId,\n        field.selectionSet,\n        context,\n      );\n    } else {\n      // It's an object\n      let valueDataId = `${dataId}.${storeFieldName}`;\n      let generated = true;\n\n      // We only prepend the '$' if the valueDataId isn't already a generated\n      // id.\n      if (!isGeneratedId(valueDataId)) {\n        valueDataId = '$' + valueDataId;\n      }\n\n      if (dataIdFromObject) {\n        const semanticId = dataIdFromObject(value);\n\n        // We throw an error if the first character of the id is '$. This is\n        // because we use that character to designate an Apollo-generated id\n        // and we use the distinction between user-desiginated and application-provided\n        // ids when managing overwrites.\n        invariant(\n          !semanticId || !isGeneratedId(semanticId),\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n\n        if (\n          semanticId ||\n          (typeof semanticId === 'number' && semanticId === 0)\n        ) {\n          valueDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(valueDataId, field, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: valueDataId,\n          result: value,\n          selectionSet: field.selectionSet,\n          context,\n        });\n      }\n\n      // We take the id and escape it (i.e. wrap it with an enclosing object).\n      // This allows us to distinguish IDs from normal scalars.\n      const typename = value.__typename;\n      storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n      // check if there was a generated id at the location where we're\n      // about to place this new id. If there was, we have to merge the\n      // data from that id with the data we're about to write in the store.\n      storeObject = store.get(dataId);\n      const escapedId =\n        storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n      if (escapedId !== storeValue && isIdValue(escapedId)) {\n        const hadTypename = escapedId.typename !== undefined;\n        const hasTypename = typename !== undefined;\n        const typenameChanged =\n          hadTypename && hasTypename && escapedId.typename !== typename;\n\n        // If there is already a real id in the store and the current id we\n        // are dealing with is generated, we throw an error.\n        // One exception we allow is when the typename has changed, which occurs\n        // when schema defines a union, both with and without an ID in the same place.\n        // checks if we \"lost\" the read id\n        invariant(\n          !generated || escapedId.generated || typenameChanged,\n          `Store error: the application attempted to write an object with no provided id but the store already contains an id of ${\n            escapedId.id\n          } for this object. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        // checks if we \"lost\" the typename\n        invariant(\n          !hadTypename || hasTypename,\n          `Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of ${\n            escapedId.typename\n          } for the object of id ${escapedId.id}. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        if (escapedId.generated) {\n          // We should only merge if it's an object of the same type,\n          // otherwise we should delete the generated object\n          if (typenameChanged) {\n            // Only delete the generated object when the old object was\n            // inlined, and the new object is not. This is indicated by\n            // the old id being generated, and the new id being real.\n            if (!generated) {\n              store.delete(escapedId.id);\n            }\n          } else {\n            mergeWithGenerated(escapedId.id, (storeValue as IdValue).id, store);\n          }\n        }\n      }\n    }\n\n    storeObject = store.get(dataId);\n    if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n      store.set(dataId, {\n        ...storeObject,\n        [storeFieldName]: storeValue,\n      });\n    }\n  }\n\n  private processArrayValue(\n    value: any[],\n    generatedId: string,\n    selectionSet: SelectionSetNode,\n    context: WriteContext,\n  ): any[] {\n    return value.map((item: any, index: any) => {\n      if (item === null) {\n        return null;\n      }\n\n      let itemDataId = `${generatedId}.${index}`;\n\n      if (Array.isArray(item)) {\n        return this.processArrayValue(item, itemDataId, selectionSet, context);\n      }\n\n      let generated = true;\n\n      if (context.dataIdFromObject) {\n        const semanticId = context.dataIdFromObject(item);\n\n        if (semanticId) {\n          itemDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: itemDataId,\n          result: item,\n          selectionSet,\n          context,\n        });\n      }\n\n      return toIdValue(\n        { id: itemDataId, typename: item.__typename },\n        generated,\n      );\n    });\n  }\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n): boolean {\n  if (generatedKey === realKey) {\n    return false;\n  }\n\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n  let madeChanges = false;\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n\n    if (\n      isIdValue(value) &&\n      isGeneratedId(value.id) &&\n      isIdValue(realValue) &&\n      !isEqual(value, realValue) &&\n      mergeWithGenerated(value.id, realValue.id, cache)\n    ) {\n      madeChanges = true;\n    }\n  });\n\n  cache.delete(generatedKey);\n  const newRealValue = { ...generated, ...real };\n\n  if (isEqual(newRealValue, real)) {\n    return madeChanges;\n  }\n\n  cache.set(realKey, newRealValue);\n  return true;\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n","// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\n\nimport { Cache, ApolloCache, Transaction } from 'apollo-cache';\n\nimport { addTypenameToDocument } from 'apollo-utilities';\n\nimport { wrap } from 'optimism';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\n\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { CacheKeyNode } from './cacheKeys';\nimport { ObjectCache } from './objectCache';\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n}\n\nconst defaultConfig: InMemoryCacheConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class OptimisticCacheLayer extends ObjectCache {\n  constructor(\n    public readonly optimisticId: string,\n    // OptimisticCacheLayer objects always wrap some other parent cache, so\n    // this.parent should never be null.\n    public readonly parent: NormalizedCache,\n    public readonly transaction: Transaction<NormalizedCacheObject>,\n  ) {\n    super(Object.create(null));\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  // All the other accessor methods of ObjectCache work without knowing about\n  // this.parent, but the get method needs to be overridden to implement the\n  // fallback this.parent.get(dataId) behavior.\n  public get(dataId: string) {\n    return hasOwn.call(this.data, dataId)\n      ? this.data[dataId]\n      : this.parent.get(dataId);\n  }\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: NormalizedCache;\n  private optimisticData: NormalizedCache;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n  private cacheKeyRoot = new CacheKeyNode();\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      invariant.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      invariant.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = this.config.addTypename;\n\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    this.data = this.config.resultCaching\n      ? new DepTrackingCache()\n      : new ObjectCache();\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of OptimisticCacheLayer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = this.data;\n\n    this.storeReader = new StoreReader(this.cacheKeyRoot);\n    this.storeWriter = new StoreWriter();\n\n    const cache = this;\n    const { maybeBroadcastWatch } = cache;\n    this.maybeBroadcastWatch = wrap((c: Cache.WatchOptions) => {\n      return maybeBroadcastWatch.call(this, c);\n    }, {\n      makeCacheKey(c: Cache.WatchOptions) {\n        if (c.optimistic) {\n          // If we're reading optimistic data, it doesn't matter if this.data\n          // is a DepTrackingCache, since it will be ignored.\n          return;\n        }\n\n        if (c.previousResult) {\n          // If a previousResult was provided, assume the caller would prefer\n          // to compare the previous data to the new data to determine whether\n          // to broadcast, so we should disable caching by returning here, to\n          // give maybeBroadcastWatch a chance to do that comparison.\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          // Return a cache key (thus enabling caching) only if we're currently\n          // using a data store that can track cache dependencies.\n          return cache.cacheKeyRoot.lookup(\n            c.query,\n            JSON.stringify(c.variables),\n          );\n        }\n      }\n    });\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    if (typeof options.rootId === 'string' &&\n        typeof this.data.get(options.rootId) === 'undefined') {\n      return null;\n    }\n\n    return this.storeReader.readQueryFromStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n      rootId: options.rootId,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      previousResult: options.previousResult,\n      config: this.config,\n    });\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    return this.storeReader.diffQueryAgainstStore({\n      store: query.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction: this.config.fragmentMatcher.match,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.add(watch);\n\n    return () => {\n      this.watches.delete(watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new InvariantError(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const toReapply: OptimisticCacheLayer[] = [];\n    let removedCount = 0;\n    let layer = this.optimisticData;\n\n    while (layer instanceof OptimisticCacheLayer) {\n      if (layer.optimisticId === idToRemove) {\n        ++removedCount;\n      } else {\n        toReapply.push(layer);\n      }\n      layer = layer.parent;\n    }\n\n    if (removedCount > 0) {\n      // Reset this.optimisticData to the first non-OptimisticCacheLayer object,\n      // which is almost certainly this.data.\n      this.optimisticData = layer;\n\n      // Reapply the layers whose optimistic IDs do not match the removed ID.\n      while (toReapply.length > 0) {\n        const layer = toReapply.pop();\n        this.performTransaction(layer.transaction, layer.optimisticId);\n      }\n\n      this.broadcastWatches();\n    }\n  }\n\n  public performTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    // This parameter is not part of the performTransaction signature inherited\n    // from the ApolloCache abstract class, but it's useful because it saves us\n    // from duplicating this implementation in recordOptimisticTransaction.\n    optimisticId?: string,\n  ) {\n    const { data, silenceBroadcast } = this;\n    this.silenceBroadcast = true;\n\n    if (typeof optimisticId === 'string') {\n      // Add a new optimistic layer and temporarily make this.data refer to\n      // that layer for the duration of the transaction.\n      this.data = this.optimisticData = new OptimisticCacheLayer(\n        // Note that there can be multiple layers with the same optimisticId.\n        // When removeOptimistic(id) is called for that id, all matching layers\n        // will be removed, and the remaining layers will be reapplied.\n        optimisticId,\n        this.optimisticData,\n        transaction,\n      );\n    }\n\n    try {\n      transaction(this);\n    } finally {\n      this.silenceBroadcast = silenceBroadcast;\n      this.data = data;\n    }\n\n    // This broadcast does nothing if this.silenceBroadcast is true.\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    return this.performTransaction(transaction, id);\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches() {\n    if (!this.silenceBroadcast) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c));\n    }\n  }\n\n  // This method is wrapped in the constructor so that it will be called only\n  // if the data that would be broadcast has changed.\n  private maybeBroadcastWatch(c: Cache.WatchOptions) {\n    c.callback(\n      this.diff({\n        query: c.query,\n        variables: c.variables,\n        previousResult: c.previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      }),\n    );\n  }\n}\n","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\n(function (invariant) {\r\n    function warn() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.warn.apply(console, args);\r\n    }\r\n    invariant.warn = warn;\r\n    function error() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return console.error.apply(console, args);\r\n    }\r\n    invariant.error = error;\r\n})(invariant || (invariant = {}));\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant };\n","import { Operation } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\n/*\n * Http Utilities: shared across links that make http requests\n */\n\n// XXX replace with actual typings when available\ndeclare var AbortController: any;\n\n//Used for any Error for data from the server\n//on a request with a Status >= 300\n//response contains no data or errors\nexport type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\n//Thrown when server's resonse is cannot be parsed\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any; //overrides headers in options\n  credentials?: any;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\n// The body of a GraphQL-over-HTTP-POST request.\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: GlobalFetch['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const throwServerError = (response, result, message) => {\n  const error = new Error(message) as ServerError;\n\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n\n  throw error;\n};\n\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport const parseAndCheckHttpResponse = operations => (response: Response) => {\n  return (\n    response\n      .text()\n      .then(bodyText => {\n        try {\n          return JSON.parse(bodyText);\n        } catch (err) {\n          const parseError = err as ServerParseError;\n          parseError.name = 'ServerParseError';\n          parseError.response = response;\n          parseError.statusCode = response.status;\n          parseError.bodyText = bodyText;\n          return Promise.reject(parseError);\n        }\n      })\n      //TODO: when conditional types come out then result should be T extends Array ? Array<FetchResult> : FetchResult\n      .then((result: any) => {\n        if (response.status >= 300) {\n          //Network error\n          throwServerError(\n            response,\n            result,\n            `Response not successful: Received status code ${response.status}`,\n          );\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (\n          !Array.isArray(result) &&\n          !result.hasOwnProperty('data') &&\n          !result.hasOwnProperty('errors')\n        ) {\n          //Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations)\n                ? operations.map(op => op.operationName)\n                : operations.operationName\n            }'.`,\n          );\n        }\n        return result;\n      })\n  );\n};\n\nexport const checkFetcher = (fetcher: GlobalFetch['fetch']) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    let library: string = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw new InvariantError(`\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\nyour environment like https://www.npmjs.com/package/${library}.\n\nFor example:\nimport fetch from '${library}';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });`);\n  }\n};\n\nexport const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http;\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nexport const serializeFetchParameter = (p, label) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n\n//selects \"/graphql\" by default\nexport const selectURI = (\n  operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders = {};\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so its already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we dont' call next, the UI can only show networkError because AC didn't\n            // get andy graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defineToJSON;\n\nvar _nodejsCustomInspectSymbol = _interopRequireDefault(require(\"./nodejsCustomInspectSymbol\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\nfunction defineToJSON( // eslint-disable-next-line flowtype/no-weak-types\nclassObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (_nodejsCustomInspectSymbol.default) {\n    classObject.prototype[_nodejsCustomInspectSymbol.default] = fn;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariant;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = defineToStringTag;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nfunction defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = void 0;\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant\"));\n\nvar _defineToStringTag = _interopRequireDefault(require(\"../jsutils/defineToStringTag\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  !(this.locationOffset.line > 0) ? (0, _invariant.default)(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? (0, _invariant.default)(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\n\nexports.Source = Source;\n(0, _defineToStringTag.default)(Source);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printError = printError;\n\nvar _location = require(\"../language/location\");\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nfunction printError(error) {\n  var printedLocations = [];\n\n  if (error.nodes) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = error.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var node = _step.value;\n\n        if (node.loc) {\n          printedLocations.push(highlightSourceAtLocation(node.loc.source, (0, _location.getLocation)(node.loc.source, node.loc.start)));\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = error.locations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var location = _step2.value;\n        printedLocations.push(highlightSourceAtLocation(source, location));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n\n\nfunction highlightSourceAtLocation(source, location) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = location.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = location.line + lineOffset;\n  var columnOffset = location.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = location.column + columnOffset;\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  return \"\".concat(source.name, \" (\").concat(lineNum, \":\").concat(columnNum, \")\\n\") + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1, \": \"), lines[lineIndex - 1]], [\"\".concat(lineNum, \": \"), lines[lineIndex]], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1, \": \"), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = existingLines[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _ref4 = _step3.value;\n      var prefix = _ref4[0];\n      padLen = Math.max(padLen, prefix.length);\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + line;\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLError = GraphQLError;\n\nvar _printError = require(\"./printError\");\n\nvar _location = require(\"../language/location\");\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return (0, _location.getLocation)(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push((0, _location.getLocation)(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions || originalError && originalError.extensions;\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return (0, _printError.printError)(this);\n    }\n  }\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require(\"./GraphQLError\");\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _GraphQLError = require(\"./GraphQLError\");\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatError = formatError;\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  !error ? (0, _invariant.default)(0, 'Received null or undefined error.') : void 0;\n  var message = error.message || 'An unknown error occurred.';\n  var locations = error.locations;\n  var path = error.path;\n  var extensions = error.extensions;\n  return extensions ? {\n    message: message,\n    locations: locations,\n    path: path,\n    extensions: extensions\n  } : {\n    message: message,\n    locations: locations,\n    path: path\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"GraphQLError\", {\n  enumerable: true,\n  get: function get() {\n    return _GraphQLError.GraphQLError;\n  }\n});\nObject.defineProperty(exports, \"syntaxError\", {\n  enumerable: true,\n  get: function get() {\n    return _syntaxError.syntaxError;\n  }\n});\nObject.defineProperty(exports, \"locatedError\", {\n  enumerable: true,\n  get: function get() {\n    return _locatedError.locatedError;\n  }\n});\nObject.defineProperty(exports, \"printError\", {\n  enumerable: true,\n  get: function get() {\n    return _printError.printError;\n  }\n});\nObject.defineProperty(exports, \"formatError\", {\n  enumerable: true,\n  get: function get() {\n    return _formatError.formatError;\n  }\n});\n\nvar _GraphQLError = require(\"./GraphQLError\");\n\nvar _syntaxError = require(\"./syntaxError\");\n\nvar _locatedError = require(\"./locatedError\");\n\nvar _printError = require(\"./printError\");\n\nvar _formatError = require(\"./formatError\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blockStringValue;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLexer = createLexer;\nexports.getTokenDesc = getTokenDesc;\nexports.TokenKind = void 0;\n\nvar _defineToJSON = _interopRequireDefault(require(\"../jsutils/defineToJSON\"));\n\nvar _error = require(\"../error\");\n\nvar _blockStringValue = _interopRequireDefault(require(\"./blockStringValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n\nexports.TokenKind = TokenKind;\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\n(0, _defineToJSON.default)(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (charCodeAt.call(body, pos + 1) === 46 && charCodeAt.call(body, pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (charCodeAt.call(body, pos + 1) === 34 && charCodeAt.call(body, pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw (0, _error.syntaxError)(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n\n    if (code >= 48 && code <= 57) {\n      throw (0, _error.syntaxError)(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = charCodeAt.call(body, ++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw (0, _error.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _error.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n\n          if (charCode < 0) {\n            throw (0, _error.syntaxError)(source, position, 'Invalid character escape sequence: ' + \"\\\\u\".concat(body.slice(position + 1, position + 5), \".\"));\n          }\n\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n\n        default:\n          throw (0, _error.syntaxError)(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockStringValue.default)(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _error.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _error.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && (code = charCodeAt.call(body, position)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, slice.call(body, start, position));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Kind = void 0;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\nexports.Kind = Kind;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n\nexports.DirectiveLocation = DirectiveLocation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\nexports.parseConstValue = parseConstValue;\nexports.parseTypeReference = parseTypeReference;\nexports.parseNamedType = parseNamedType;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nvar _defineToJSON = _interopRequireDefault(require(\"../jsutils/defineToJSON\"));\n\nvar _source = require(\"./source\");\n\nvar _error = require(\"../error\");\n\nvar _lexer = require(\"./lexer\");\n\nvar _kinds = require(\"./kinds\");\n\nvar _directiveLocation = require(\"./directiveLocation\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n\n  if (!(sourceObj instanceof _source.Source)) {\n    throw new TypeError(\"Must provide Source. Received: \".concat((0, _inspect.default)(sourceObj)));\n  }\n\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\n\nfunction parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\n\nfunction parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n  var lexer = (0, _lexer.createLexer)(sourceObj, options || {});\n  expect(lexer, _lexer.TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, _lexer.TokenKind.EOF);\n  return type;\n}\n/**\n * Converts a name lex token into a name parse node.\n */\n\n\nfunction parseName(lexer) {\n  var token = expect(lexer, _lexer.TokenKind.NAME);\n  return {\n    kind: _kinds.Kind.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n} // Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\n\n\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.DOCUMENT,\n    definitions: many(lexer, _lexer.TokenKind.SOF, parseDefinition, _lexer.TokenKind.EOF),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n *   - TypeSystemExtension\n */\n\n\nfunction parseDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'directive':\n        return parseTypeSystemDefinition(lexer);\n\n      case 'extend':\n        return parseTypeSystemExtension(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\n\n\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n} // Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\n\n\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n\n  if (peek(lexer, _lexer.TokenKind.BRACE_L)) {\n    return {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n\n  var operation = parseOperationType(lexer);\n  var name;\n\n  if (peek(lexer, _lexer.TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * OperationType : one of query mutation subscription\n */\n\n\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, _lexer.TokenKind.NAME);\n\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n\n    case 'mutation':\n      return 'mutation';\n\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\n\n\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, parseVariableDefinition, _lexer.TokenKind.PAREN_R) : [];\n}\n/**\n * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n */\n\n\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, _lexer.TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, _lexer.TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    directives: parseDirectives(lexer, true),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * Variable : $ Name\n */\n\n\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.DOLLAR);\n  return {\n    kind: _kinds.Kind.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * SelectionSet : { Selection+ }\n */\n\n\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.SELECTION_SET,\n    selections: many(lexer, _lexer.TokenKind.BRACE_L, parseSelection, _lexer.TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\n\n\nfunction parseSelection(lexer) {\n  return peek(lexer, _lexer.TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\n\n\nfunction parseField(lexer) {\n  var start = lexer.token;\n  var nameOrAlias = parseName(lexer);\n  var alias;\n  var name;\n\n  if (skip(lexer, _lexer.TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: _kinds.Kind.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, _lexer.TokenKind.BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\n\n\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, _lexer.TokenKind.PAREN_L) ? many(lexer, _lexer.TokenKind.PAREN_L, item, _lexer.TokenKind.PAREN_R) : [];\n}\n/**\n * Argument[Const] : Name : Value[?Const]\n */\n\n\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n} // Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\n\n\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.SPREAD);\n  var hasTypeCondition = skipKeyword(lexer, 'on');\n\n  if (!hasTypeCondition && peek(lexer, _lexer.TokenKind.NAME)) {\n    return {\n      kind: _kinds.Kind.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n\n  return {\n    kind: _kinds.Kind.INLINE_FRAGMENT,\n    typeCondition: hasTypeCondition ? parseNamedType(lexer) : undefined,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\n\n\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment'); // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n\n  return {\n    kind: _kinds.Kind.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * FragmentName : Name but not `on`\n */\n\n\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n\n  return parseName(lexer);\n} // Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\n\n\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n\n  switch (token.kind) {\n    case _lexer.TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n\n    case _lexer.TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n\n    case _lexer.TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: _kinds.Kind.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n\n    case _lexer.TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: _kinds.Kind.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n\n    case _lexer.TokenKind.STRING:\n    case _lexer.TokenKind.BLOCK_STRING:\n      return parseStringLiteral(lexer);\n\n    case _lexer.TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: _kinds.Kind.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: _kinds.Kind.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n\n      lexer.advance();\n      return {\n        kind: _kinds.Kind.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n\n    case _lexer.TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n\n      break;\n  }\n\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: _kinds.Kind.STRING,\n    value: token.value,\n    block: token.kind === _lexer.TokenKind.BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nfunction parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\n\n\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: _kinds.Kind.LIST,\n    values: any(lexer, _lexer.TokenKind.BRACKET_L, item, _lexer.TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\n\n\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.BRACE_L);\n  var fields = [];\n\n  while (!skip(lexer, _lexer.TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n\n  return {\n    kind: _kinds.Kind.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\n\n\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, _lexer.TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n} // Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\n\n\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n\n  while (peek(lexer, _lexer.TokenKind.AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n\n  return directives;\n}\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\n\n\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, _lexer.TokenKind.AT);\n  return {\n    kind: _kinds.Kind.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n} // Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\n\n\nfunction parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type;\n\n  if (skip(lexer, _lexer.TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, _lexer.TokenKind.BRACKET_R);\n    type = {\n      kind: _kinds.Kind.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n\n  if (skip(lexer, _lexer.TokenKind.BANG)) {\n    return {\n      kind: _kinds.Kind.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n\n  return type;\n}\n/**\n * NamedType : Name\n */\n\n\nfunction parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: _kinds.Kind.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n} // Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\n\n\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, _lexer.TokenKind.STRING) || peek(lexer, _lexer.TokenKind.BLOCK_STRING);\n}\n/**\n * Description : StringValue\n */\n\n\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\n\n\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, _lexer.TokenKind.BRACE_L, parseOperationTypeDefinition, _lexer.TokenKind.BRACE_R);\n  return {\n    kind: _kinds.Kind.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\n\n\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\n\n\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\n\n\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ImplementsInterfaces :\n *   - implements `&`? NamedType\n *   - ImplementsInterfaces & NamedType\n */\n\n\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n\n  if (skipKeyword(lexer, 'implements')) {\n    // Optional leading ampersand\n    skip(lexer, _lexer.TokenKind.AMP);\n\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, _lexer.TokenKind.AMP) || // Legacy support for the SDL?\n    lexer.options.allowLegacySDLImplementsInterfaces && peek(lexer, _lexer.TokenKind.NAME));\n  }\n\n  return types;\n}\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\n\n\nfunction parseFieldsDefinition(lexer) {\n  // Legacy support for the SDL?\n  if (lexer.options.allowLegacySDLEmptyFields && peek(lexer, _lexer.TokenKind.BRACE_L) && lexer.lookahead().kind === _lexer.TokenKind.BRACE_R) {\n    lexer.advance();\n    lexer.advance();\n    return [];\n  }\n\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseFieldDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\n\n\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.Kind.FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\n\n\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, _lexer.TokenKind.PAREN_L)) {\n    return [];\n  }\n\n  return many(lexer, _lexer.TokenKind.PAREN_L, parseInputValueDef, _lexer.TokenKind.PAREN_R);\n}\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\n\n\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, _lexer.TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue;\n\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\n\n\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? UnionMemberTypes?\n */\n\n\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  return {\n    kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * UnionMemberTypes :\n *   - = `|`? NamedType\n *   - UnionMemberTypes | NamedType\n */\n\n\nfunction parseUnionMemberTypes(lexer) {\n  var types = [];\n\n  if (skip(lexer, _lexer.TokenKind.EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, _lexer.TokenKind.PIPE);\n\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, _lexer.TokenKind.PIPE));\n  }\n\n  return types;\n}\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\n\n\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\n\n\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseEnumValueDefinition, _lexer.TokenKind.BRACE_R) : [];\n}\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\n\n\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\n\n\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\n\n\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseInputValueDef, _lexer.TokenKind.BRACE_R) : [];\n}\n/**\n * TypeSystemExtension :\n *   - SchemaExtension\n *   - TypeExtension\n *\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\n\n\nfunction parseTypeSystemExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === _lexer.TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaExtension(lexer);\n\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n/**\n * SchemaExtension :\n *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n *  - extend schema Directives[Const]\n */\n\n\nfunction parseSchemaExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = peek(lexer, _lexer.TokenKind.BRACE_L) ? many(lexer, _lexer.TokenKind.BRACE_L, parseOperationTypeDefinition, _lexer.TokenKind.BRACE_R) : [];\n\n  if (directives.length === 0 && operationTypes.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.SCHEMA_EXTENSION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\n\n\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\n\n\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\n\n\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? UnionMemberTypes\n *   - extend union Name Directives[Const]\n */\n\n\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\n\n\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\n\n\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n\n  return {\n    kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\n\n\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, _lexer.TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\n\n\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, _lexer.TokenKind.PIPE);\n  var locations = [];\n\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, _lexer.TokenKind.PIPE));\n\n  return locations;\n}\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\n\n\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n\n  if (_directiveLocation.DirectiveLocation.hasOwnProperty(name.value)) {\n    return name;\n  }\n\n  throw unexpected(lexer, start);\n} // Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\n\n\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\n(0, _defineToJSON.default)(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * Determines if the next token is of a given kind\n */\n\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\n\n\nfunction skip(lexer, kind) {\n  if (lexer.token.kind === kind) {\n    lexer.advance();\n    return true;\n  }\n\n  return false;\n}\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\n\n\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n\n  throw (0, _error.syntaxError)(lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat((0, _lexer.getTokenDesc)(token)));\n}\n/**\n * If the next token is a keyword with the given value, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\n\n\nfunction skipKeyword(lexer, value) {\n  var token = lexer.token;\n\n  if (token.kind === _lexer.TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return true;\n  }\n\n  return false;\n}\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and throw\n * an error.\n */\n\n\nfunction expectKeyword(lexer, value) {\n  if (!skipKeyword(lexer, value)) {\n    throw (0, _error.syntaxError)(lexer.source, lexer.token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat((0, _lexer.getTokenDesc)(lexer.token)));\n  }\n}\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\n\n\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return (0, _error.syntaxError)(lexer.source, token.start, \"Unexpected \".concat((0, _lexer.getTokenDesc)(token)));\n}\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\n\n\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n\n  return nodes;\n}\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\n\n\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n\n  return nodes;\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","import Client, {\n  ApolloClient,\n  ApolloQueryResult,\n  FetchResult,\n  MutationOptions,\n  ObservableQuery,\n  OperationVariables,\n  QueryOptions,\n  WatchQueryOptions,\n} from 'apollo-boost';\n\nexport type QueryResult<T> = ApolloQueryResult<T>;\n\nexport interface IGraphqlClient\n  extends Pick<ApolloClient<any>, 'query' | 'watchQuery' | 'mutate'> {}\n/**\n * GraphQL client class that wraps a client from a library and handles query/mutation communication.\n */\nexport class GraphqlClient implements IGraphqlClient {\n  private client: ApolloClient<any>;\n  constructor(public uri: string) {\n    this.client = new Client({\n      uri,\n    });\n  }\n  // @todo: eliminate the need to pass in QueryOptions, but allow string and construct options from defaults and transform string with graphql-tag\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables>\n  ): Promise<ApolloQueryResult<T>> {\n    return this.client.query(options);\n  }\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables>\n  ): ObservableQuery<T, TVariables> {\n    return this.client.watchQuery(options);\n  }\n  public mutate<T = any, TVariables = OperationVariables>(\n    options: MutationOptions<T, TVariables>\n  ): Promise<FetchResult<T>> {\n    return this.client.mutate(options);\n  }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.page = factory());\n}(this, (function () { 'use strict';\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {String} str\n * @return {Array}\n */\nfunction parse (str) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var suffix = res[6];\n    var asterisk = res[7];\n\n    var repeat = suffix === '+' || suffix === '*';\n    var optional = suffix === '?' || suffix === '*';\n    var delimiter = prefix || '/';\n    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: escapeGroup(pattern)\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {String}   str\n * @return {Function}\n */\nfunction compile (str) {\n  return tokensToFunction(parse(str))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^' + tokens[i].pattern + '$');\n    }\n  }\n\n  return function (obj) {\n    var path = '';\n    var data = obj || {};\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encodeURIComponent(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = encodeURIComponent(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {String} str\n * @return {String}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {String}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {RegExp} path\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {Array}  path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {String} path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  var tokens = parse(path);\n  var re = tokensToRegExp(tokens, options);\n\n  // Attach keys back to the regexp.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] !== 'string') {\n      keys.push(tokens[i]);\n    }\n  }\n\n  return attachKeys(re, keys)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {Array}  tokens\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction tokensToRegExp (tokens, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n  var lastToken = tokens[tokens.length - 1];\n  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken);\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = token.pattern;\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (prefix) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)';\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 [keys]\n * @param  {Object}                [options]\n * @return {RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  keys = keys || [];\n\n  if (!isarray(keys)) {\n    options = keys;\n    keys = [];\n  } else if (!options) {\n    options = {};\n  }\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys, options)\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(path, keys, options)\n  }\n\n  return stringToRegexp(path, keys, options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n   * Module dependencies.\n   */\n\n  \n\n  /**\n   * Short-cuts for global-object checks\n   */\n\n  var hasDocument = ('undefined' !== typeof document);\n  var hasWindow = ('undefined' !== typeof window);\n  var hasHistory = ('undefined' !== typeof history);\n  var hasProcess = typeof process !== 'undefined';\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = hasDocument && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var isLocation = hasWindow && !!(window.history.location || window.location);\n\n  /**\n   * The page instance\n   * @api private\n   */\n  function Page() {\n    // public things\n    this.callbacks = [];\n    this.exits = [];\n    this.current = '';\n    this.len = 0;\n\n    // private things\n    this._decodeURLComponents = true;\n    this._base = '';\n    this._strict = false;\n    this._running = false;\n    this._hashbang = false;\n\n    // bound functions\n    this.clickHandler = this.clickHandler.bind(this);\n    this._onpopstate = this._onpopstate.bind(this);\n  }\n\n  /**\n   * Configure the instance of page. This can be called multiple times.\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.configure = function(options) {\n    var opts = options || {};\n\n    this._window = opts.window || (hasWindow && window);\n    this._decodeURLComponents = opts.decodeURLComponents !== false;\n    this._popstate = opts.popstate !== false && hasWindow;\n    this._click = opts.click !== false && hasDocument;\n    this._hashbang = !!opts.hashbang;\n\n    var _window = this._window;\n    if(this._popstate) {\n      _window.addEventListener('popstate', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('popstate', this._onpopstate, false);\n    }\n\n    if (this._click) {\n      _window.document.addEventListener(clickEvent, this.clickHandler, false);\n    } else if(hasDocument) {\n      _window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    }\n\n    if(this._hashbang && hasWindow && !hasHistory) {\n      _window.addEventListener('hashchange', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('hashchange', this._onpopstate, false);\n    }\n  };\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {string} path\n   * @api public\n   */\n\n  Page.prototype.base = function(path) {\n    if (0 === arguments.length) return this._base;\n    this._base = path;\n  };\n\n  /**\n   * Gets the `base`, which depends on whether we are using History or\n   * hashbang routing.\n\n   * @api private\n   */\n  Page.prototype._getBase = function() {\n    var base = this._base;\n    if(!!base) return base;\n    var loc = hasWindow && this._window && this._window.location;\n\n    if(hasWindow && this._hashbang && loc && loc.protocol === 'file:') {\n      base = loc.pathname;\n    }\n\n    return base;\n  };\n\n  /**\n   * Get or set strict path matching to `enable`\n   *\n   * @param {boolean} enable\n   * @api public\n   */\n\n  Page.prototype.strict = function(enable) {\n    if (0 === arguments.length) return this._strict;\n    this._strict = enable;\n  };\n\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.start = function(options) {\n    var opts = options || {};\n    this.configure(opts);\n\n    if (false === opts.dispatch) return;\n    this._running = true;\n\n    var url;\n    if(isLocation) {\n      var window = this._window;\n      var loc = window.location;\n\n      if(this._hashbang && ~loc.hash.indexOf('#!')) {\n        url = loc.hash.substr(2) + loc.search;\n      } else if (this._hashbang) {\n        url = loc.search + loc.hash;\n      } else {\n        url = loc.pathname + loc.search + loc.hash;\n      }\n    }\n\n    this.replace(url, null, true, opts.dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  Page.prototype.stop = function() {\n    if (!this._running) return;\n    this.current = '';\n    this.len = 0;\n    this._running = false;\n\n    var window = this._window;\n    this._click && window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    hasWindow && window.removeEventListener('popstate', this._onpopstate, false);\n    hasWindow && window.removeEventListener('hashchange', this._onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} dispatch\n   * @param {boolean=} push\n   * @return {!Context}\n   * @api public\n   */\n\n  Page.prototype.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object=} state\n   * @api public\n   */\n\n  Page.prototype.back = function(path, state) {\n    var page = this;\n    if (this.len > 0) {\n      var window = this._window;\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      hasHistory && window.history.back();\n      this.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    } else {\n      setTimeout(function() {\n        page.show(page._getBase(), state);\n      });\n    }\n  };\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {string} from - if param 'to' is undefined redirects to 'from'\n   * @param {string=} to\n   * @api public\n   */\n  Page.prototype.redirect = function(from, to) {\n    var inst = this;\n\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page.call(this, from, function(e) {\n        setTimeout(function() {\n          inst.replace(/** @type {!string} */ (to));\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        inst.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} init\n   * @param {boolean=} dispatch\n   * @return {!Context}\n   * @api public\n   */\n\n\n  Page.prototype.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  Page.prototype.dispatch = function(ctx, prev) {\n    var i = 0, j = 0, page = this;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled.call(page, ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  Page.prototype.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return this.exit('*', path);\n    }\n\n    var route = new Route(path, null, this);\n    for (var i = 1; i < arguments.length; ++i) {\n      this.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Handle \"click\" events.\n   */\n\n  /* jshint +W054 */\n  Page.prototype.clickHandler = function(e) {\n    if (1 !== this._which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n    // ensure link\n    // use shadow dom when available if not, fall back to composedPath()\n    // for browsers that only have shady\n    var el = e.target;\n    var eventPath = e.path || (e.composedPath ? e.composedPath() : null);\n\n    if(eventPath) {\n      for (var i = 0; i < eventPath.length; i++) {\n        if (!eventPath[i].nodeName) continue;\n        if (eventPath[i].nodeName.toUpperCase() !== 'A') continue;\n        if (!eventPath[i].href) continue;\n\n        el = eventPath[i];\n        break;\n      }\n    }\n\n    // continue ensure link\n    // el.nodeName for svg links are 'a' instead of 'A'\n    while (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName.toUpperCase()) return;\n\n    // check if link is inside an svg\n    // in this case, both href and target are always inside an object\n    var svg = (typeof el.href === 'object') && el.href.constructor.name === 'SVGAnimatedString';\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if(!this._hashbang && this._samePath(el) && (el.hash || '#' === link)) return;\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    // svg target is an object and its desired value is in .baseVal property\n    if (svg ? el.target.baseVal : el.target) return;\n\n    // x-origin\n    // note: svg links that are not relative don't call click events (and skip page.js)\n    // consequently, all svg links tested inside page.js are relative and in the same origin\n    if (!svg && !this.sameOrigin(el.href)) return;\n\n    // rebuild path\n    // There aren't .pathname and .search properties in svg links, so we use href\n    // Also, svg href is an object and its desired value is in .baseVal property\n    var path = svg ? el.href.baseVal : (el.pathname + el.search + (el.hash || ''));\n\n    path = path[0] !== '/' ? '/' + path : path;\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (hasProcess && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n    var pageBase = this._getBase();\n\n    if (path.indexOf(pageBase) === 0) {\n      path = path.substr(pageBase.length);\n    }\n\n    if (this._hashbang) path = path.replace('#!', '');\n\n    if (pageBase && orig === path && (!isLocation || this._window.location.protocol !== 'file:')) {\n      return;\n    }\n\n    e.preventDefault();\n    this.show(orig);\n  };\n\n  /**\n   * Handle \"populate\" events.\n   * @api private\n   */\n\n  Page.prototype._onpopstate = (function () {\n    var loaded = false;\n    if ( ! hasWindow ) {\n      return function () {};\n    }\n    if (hasDocument && document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      var page = this;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else if (isLocation) {\n        var loc = page._window.location;\n        page.show(loc.pathname + loc.search + loc.hash, undefined, undefined, false);\n      }\n    };\n  })();\n\n  /**\n   * Event button.\n   */\n  Page.prototype._which = function(e) {\n    e = e || (hasWindow && this._window.event);\n    return null == e.which ? e.button : e.which;\n  };\n\n  /**\n   * Convert to a URL object\n   * @api private\n   */\n  Page.prototype._toURL = function(href) {\n    var window = this._window;\n    if(typeof URL === 'function' && isLocation) {\n      return new URL(href, window.location.toString());\n    } else if (hasDocument) {\n      var anc = window.document.createElement('a');\n      anc.href = href;\n      return anc;\n    }\n  };\n\n  /**\n   * Check if `href` is the same origin.\n   * @param {string} href\n   * @api public\n   */\n\n  Page.prototype.sameOrigin = function(href) {\n    if(!href || !isLocation) return false;\n\n    var url = this._toURL(href);\n    var window = this._window;\n\n    var loc = window.location;\n    return loc.protocol === url.protocol &&\n      loc.hostname === url.hostname &&\n      loc.port === url.port;\n  };\n\n  /**\n   * @api private\n   */\n  Page.prototype._samePath = function(url) {\n    if(!isLocation) return false;\n    var window = this._window;\n    var loc = window.location;\n    return url.pathname === loc.pathname &&\n      url.search === loc.search;\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {string} val - URL component to decode\n   * @api private\n   */\n  Page.prototype._decodeURLEncodedURIComponent = function(val) {\n    if (typeof val !== 'string') { return val; }\n    return this._decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  };\n\n  /**\n   * Create a new `page` instance and function\n   */\n  function createPage() {\n    var pageInstance = new Page();\n\n    function pageFn(/* args */) {\n      return page.apply(pageInstance, arguments);\n    }\n\n    // Copy all of the things over. In 2.0 maybe we use setPrototypeOf\n    pageFn.callbacks = pageInstance.callbacks;\n    pageFn.exits = pageInstance.exits;\n    pageFn.base = pageInstance.base.bind(pageInstance);\n    pageFn.strict = pageInstance.strict.bind(pageInstance);\n    pageFn.start = pageInstance.start.bind(pageInstance);\n    pageFn.stop = pageInstance.stop.bind(pageInstance);\n    pageFn.show = pageInstance.show.bind(pageInstance);\n    pageFn.back = pageInstance.back.bind(pageInstance);\n    pageFn.redirect = pageInstance.redirect.bind(pageInstance);\n    pageFn.replace = pageInstance.replace.bind(pageInstance);\n    pageFn.dispatch = pageInstance.dispatch.bind(pageInstance);\n    pageFn.exit = pageInstance.exit.bind(pageInstance);\n    pageFn.configure = pageInstance.configure.bind(pageInstance);\n    pageFn.sameOrigin = pageInstance.sameOrigin.bind(pageInstance);\n    pageFn.clickHandler = pageInstance.clickHandler.bind(pageInstance);\n\n    pageFn.create = createPage;\n\n    Object.defineProperty(pageFn, 'len', {\n      get: function(){\n        return pageInstance.len;\n      },\n      set: function(val) {\n        pageInstance.len = val;\n      }\n    });\n\n    Object.defineProperty(pageFn, 'current', {\n      get: function(){\n        return pageInstance.current;\n      },\n      set: function(val) {\n        pageInstance.current = val;\n      }\n    });\n\n    // In 2.0 these can be named exports\n    pageFn.Context = Context;\n    pageFn.Route = Route;\n\n    return pageFn;\n  }\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {string|!Function|!Object} path\n   * @param {Function=} fn\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page.call(this, '*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(/** @type {string} */ (path), null, this);\n      for (var i = 1; i < arguments.length; ++i) {\n        this.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      this['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      this.start(path);\n    }\n  }\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n    var page = this;\n    var window = page._window;\n\n    if (page._hashbang) {\n      current = isLocation && this._getBase() + window.location.hash.replace('#!', '');\n    } else {\n      current = isLocation && window.location.pathname + window.location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    isLocation && (window.location.href = ctx.canonicalPath);\n  }\n\n  /**\n   * Escapes RegExp characters in the given string.\n   *\n   * @param {string} s\n   * @api private\n   */\n  function escapeRegExp(s) {\n    return s.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} state\n   * @api public\n   */\n\n  function Context(path, state, pageInstance) {\n    var _page = this.page = pageInstance || page;\n    var window = _page._window;\n    var hashbang = _page._hashbang;\n\n    var pageBase = _page._getBase();\n    if ('/' === path[0] && 0 !== path.indexOf(pageBase)) path = pageBase + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    var re = new RegExp('^' + escapeRegExp(pageBase));\n    this.path = path.replace(re, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = (hasDocument && window.document.title);\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? _page._decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = _page._decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = this.pathname = parts[0];\n      this.hash = _page._decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    var page = this.page;\n    var window = page._window;\n    var hashbang = page._hashbang;\n\n    page.len++;\n    if (hasHistory) {\n        window.history.pushState(this.state, this.title,\n          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    var page = this.page;\n    if (hasHistory) {\n        page._window.history.replaceState(this.state, this.title,\n          page._hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} options\n   * @api private\n   */\n\n  function Route(path, options, page) {\n    var _page = this.page = page || globalPage;\n    var opts = options || {};\n    opts.strict = opts.strict || page._strict;\n    this.path = (path === '*') ? '(.*)' : path;\n    this.method = 'GET';\n    this.regexp = pathToRegexp_1(this.path, this.keys = [], opts);\n  }\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {string} path\n   * @param {Object} params\n   * @return {boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      var val = this.page._decodeURLEncodedURIComponent(m[i]);\n      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n        params[key.name] = val;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Module exports.\n   */\n\n  var globalPage = createPage();\n  var page_js = globalPage;\n  var default_1 = globalPage;\n\npage_js.default = default_1;\n\nreturn page_js;\n\n})));\n","import { IGraphqlClient } from '@microfront/graphql-client';\nimport gql from 'graphql-tag';\nimport page from 'page';\n\nexport interface ILayout {\n  [key: string]: Array<{ [key: string]: any }>;\n}\n\nexport interface ILayoutRouter {\n  init: (q?: string) => void;\n  loadLayout: (q: string) => Promise<any>;\n  initRouter: (layout: ILayout) => void;\n  renderPageRoute: (pageDefinition: { [key: string]: any }) => void;\n}\n\nconst layoutQueryString = `\nquery {\n  allLayouts {\n    name\n    path\n    grid {\n      id\n      regions {\n        id\n        name\n        content {\n          id\n          name\n          team\n          endpoint\n        }\n      }\n    }\n  }\n}\n`;\n\nexport class LayoutRouter implements ILayoutRouter {\n  private client: IGraphqlClient;\n  constructor(client: IGraphqlClient) {\n    this.client = client;\n  }\n  public init(queryString?: string) {\n    const query = queryString || layoutQueryString;\n    this.loadLayout(query).then(layout => this.initRouter(layout));\n  }\n  public async loadLayout(queryString: string) {\n    const result = await this.client.query({\n      query: gql`\n        ${queryString}\n      `,\n    });\n    // tslint:disable no-console\n    console.log(result);\n    return result.data;\n  }\n  public initRouter(layout: ILayout) {\n    layout.allLayouts.forEach((pageDefinition: { [key: string]: any }) => {\n      page(pageDefinition.path, () => this.renderPageRoute(pageDefinition));\n    });\n    page.show('/');\n  }\n  public renderPageRoute(pageDefinition: { [key: string]: any }) {\n    const pageEl = document.createElement('microfront-router-page');\n    pageEl.dataset.path = pageDefinition.path;\n    document!.querySelector('body')!.innerHTML = '';\n    document!.querySelector('body')!.append(pageEl);\n  }\n}\n","import { GraphqlClient, IGraphqlClient } from '@microfront/graphql-client';\nimport { ILayoutRouter, LayoutRouter } from '@microfront/layout-router';\n// import * as dotenv from 'dotenv';\n\n// dotenv.config();\n\nconst apiGatewayUri = process.env.API_GATEWAY_URI || 'http://localhost:4000';\n\nexport class ClientController {\n  public graphqlClient: IGraphqlClient;\n  public router: ILayoutRouter;\n  constructor() {\n    this.graphqlClient = new GraphqlClient(apiGatewayUri);\n    this.router = new LayoutRouter(this.graphqlClient);\n  }\n  public init() {\n    this.router.init();\n  }\n}\n","import { ClientController } from '@microfront/client-controller';\nconsole.log(document);\n\nconst controller = new ClientController();\ncontroller.init();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}